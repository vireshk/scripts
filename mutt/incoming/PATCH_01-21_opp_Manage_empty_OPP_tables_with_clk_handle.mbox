From vireshk  Thu Apr  9 10:14:34 2020
Delivered-To: viresh.kumar@linaro.org
Received: from pop.gmail.com [172.253.118.108] 	by vireshk-i7 with POP3 (fetchmail-6.3.26) 	for <vireshk@localhost> (single-drop); Thu, 09 Apr 2020 10:14:34 +0530 (IST)
Received: by 2002:a5d:8719:0:0:0:0:0 with SMTP id u25csp683729iom;         Wed, 8 Apr 2020 06:47:15 -0700 (PDT)
X-Google-Smtp-Source: APiQypJqxI3Gr+tYLNyyvQpQHHYgPPZWCqqV7dOkIFi6127iiKU3GOf2E3gW7ouubpbCD8z3A/BW
X-Received: by 2002:ac8:31ac:: with SMTP id h41mr7413887qte.139.1586353635183;         Wed, 08 Apr 2020 06:47:15 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1586353635; cv=none;         d=google.com; s=arc-20160816;         b=UquQdfBZ3vCj4hcEcRK3eMg4pIKVRS5ocVwqO2aUJsUtgMXBRhAo99/UkwpgVMIblT          z+ReY7dXxAA1tx+C5o8bXLqIZeWpAGnzSkxQiBbOico2gItB9ovvx3dZUdzGNjZmgzoB          7J1SQCMxiACRhwovRF8MlpmluvEBLz6i8uXLlotGmJSNY38lXVjxtuAgrgDzRmuY/RSJ          xdyaMCtHHQ01g4kIzDqXenOEeX3cXgVwSjPgyrA94aJ8MMlUtxv9YFl37+bWM47E24Di          CqX7C3pHxBX+nEQboxNO81wFK5X8u1tCrygjVAQp0y4vYlOaumRmKddiXt0GLyPOhkbY          ZwzQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;         h=references:in-reply-to:message-id:date:subject:cc:to:from          :dmarc-filter:sender:dkim-signature;         bh=1Y++K4WB/kF2UdizTkmAe3UA5V4faKWJYUH64ZBkay8=;         b=aabbzY6V1DYLqFW1pvKOM2Bi9BZEsPKSZiE5VOzUJSnAPzjzZCsmJ5+ErS5++vzPyb          fVyiRDzUG46d6qujg0h4Oenl+iKJG8ysqHcgAnPFIgJpMW5wD6Zjwtmy5BMd+cCWsoko          e7rMnsJ5L/yfdzY4nHAf0mlCW8EpVpk55doECJIsEKdWpsfcaKZXGFNGtNJO/FusMMhc          9WKY/+Q5c7XNiKmiCXsZXHPFU+u8191LFgoKcMLbz/RZAc5fR9ThIOQZ6bjgeoxCazLc          U+5gcQHdSKnH7uSszzKU9UeGC62wv9fTJiT2GkU7kNbZyu69mbtarXldBVbcuIUZrpUy          qvog==
ARC-Authentication-Results: i=1; mx.google.com;        dkim=pass header.i=@mg.codeaurora.org header.s=smtp header.b=tJJAvNxa;        spf=pass (google.com: domain of bounce+41d485.be9e4a-viresh.kumar=linaro.org@mg.codeaurora.org designates 104.130.122.27 as permitted sender) smtp.mailfrom="bounce+41d485.be9e4a-viresh.kumar=linaro.org@mg.codeaurora.org"
Return-Path: <bounce+41d485.be9e4a-viresh.kumar=linaro.org@mg.codeaurora.org>
Received: from mail27.static.mailgun.info (mail27.static.mailgun.info. [104.130.122.27])         by mx.google.com with UTF8SMTPS id x16si432704qts.46.2020.04.08.06.47.15         for <viresh.kumar@linaro.org>         (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);         Wed, 08 Apr 2020 06:47:15 -0700 (PDT)
Received-SPF: pass (google.com: domain of bounce+41d485.be9e4a-viresh.kumar=linaro.org@mg.codeaurora.org designates 104.130.122.27 as permitted sender) client-ip=104.130.122.27;
Authentication-Results: mx.google.com;        dkim=pass header.i=@mg.codeaurora.org header.s=smtp header.b=tJJAvNxa;        spf=pass (google.com: domain of bounce+41d485.be9e4a-viresh.kumar=linaro.org@mg.codeaurora.org designates 104.130.122.27 as permitted sender) smtp.mailfrom="bounce+41d485.be9e4a-viresh.kumar=linaro.org@mg.codeaurora.org"
DKIM-Signature: a=rsa-sha256; v=1; c=relaxed/relaxed; d=mg.codeaurora.org; q=dns/txt;  s=smtp; t=1586353635; h=References: In-Reply-To: Message-Id: Date:  Subject: Cc: To: From: Sender;  bh=1Y++K4WB/kF2UdizTkmAe3UA5V4faKWJYUH64ZBkay8=; b=tJJAvNxapIOAx9FPLpM4G4B4Qm8FP62V9eXGo7c5uuo+g7kOLZOeWXhVK+EAqOqlyuPBW042  ASNu/W++Xl3QOqlbaWh0biOjCxBm8ubJ6FBTuxV8FQIePDuuZoWYAxBIsCIrqvZ5qLFhsz9x  as1U0KoQnZNU2m3V+uLK3HS/Zt4=
X-Mailgun-Sending-Ip: 104.130.122.27
X-Mailgun-Sid: WyI3OWY0YiIsICJ2aXJlc2gua3VtYXJAbGluYXJvLm9yZyIsICJiZTllNGEiXQ==
Sender: rnayak=codeaurora.org@mg.codeaurora.org
Received: from smtp.codeaurora.org (ec2-35-166-182-171.us-west-2.compute.amazonaws.com [35.166.182.171])  by mxa.mailgun.org with ESMTP id 5e8dd5e2.7f5904ae2e68-smtp-out-n03;  Wed, 08 Apr 2020 13:47:14 -0000 (UTC)
Received: by smtp.codeaurora.org (Postfix, from userid 1001) 	id D7849C433BA; Wed,  8 Apr 2020 13:47:13 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on 	aws-us-west-2-caf-mail-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=2.0 tests=ALL_TRUSTED,SPF_NONE 	autolearn=unavailable autolearn_force=no version=3.4.0
Received: from blr-ubuntu-173.qualcomm.com (blr-bdr-fw-01_GlobalNAT_AllZones-Outside.qualcomm.com [103.229.18.19]) 	(using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits)) 	(No client certificate requested) 	(Authenticated sender: rnayak) 	by smtp.codeaurora.org (Postfix) with ESMTPSA id 0EFB2C43637; 	Wed,  8 Apr 2020 13:47:09 +0000 (UTC)
DMARC-Filter: OpenDMARC Filter v1.3.2 smtp.codeaurora.org 0EFB2C43637
Authentication-Results: aws-us-west-2-caf-mail-1.web.codeaurora.org; dmarc=none (p=none dis=none) header.from=codeaurora.org
Authentication-Results: aws-us-west-2-caf-mail-1.web.codeaurora.org; spf=none smtp.mailfrom=rnayak@codeaurora.org
From: Rajendra Nayak <rnayak@codeaurora.org>
To: viresh.kumar@linaro.org, 	sboyd@kernel.org, 	bjorn.andersson@linaro.org, 	agross@kernel.org
Cc: linux-arm-msm@vger.kernel.org, 	devicetree@vger.kernel.org, 	linux-kernel@vger.kernel.org, 	Rajendra Nayak <rnayak@codeaurora.org>
Subject: [PATCH 01/21] opp: Manage empty OPP tables with clk handle
Date: Wed,  8 Apr 2020 19:16:27 +0530
Message-Id: <1586353607-32222-2-git-send-email-rnayak@codeaurora.org>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1586353607-32222-1-git-send-email-rnayak@codeaurora.org>
References: <1586353607-32222-1-git-send-email-rnayak@codeaurora.org>
Status: RO
Content-Length: 2009
Lines: 53

With OPP core now supporting DVFS for IO devices, we have instances of
IO devices (same IP block) which require an OPP on some platforms/SoCs
while just needing to scale the clock on some others.

In order to avoid conditional code in every driver which supports such
devices (to check for availability of OPPs and then deciding to do
either dev_pm_opp_set_rate() or clk_set_rate()) add support to manage
empty OPP tables with a clk handle.

This makes dev_pm_opp_set_rate() equivalent of a clk_set_rate() for
devices with just a clk and no OPPs specified, and makes
dev_pm_opp_set_rate(0) bail out without throwing an error.

Signed-off-by: Rajendra Nayak <rnayak@codeaurora.org>
---
 drivers/opp/core.c | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/drivers/opp/core.c b/drivers/opp/core.c
index ba43e6a..e4f01e7 100644
--- a/drivers/opp/core.c
+++ b/drivers/opp/core.c
@@ -819,6 +819,8 @@ int dev_pm_opp_set_rate(struct device *dev, unsigned long target_freq)
 	if (unlikely(!target_freq)) {
 		if (opp_table->required_opp_tables) {
 			ret = _set_required_opps(dev, opp_table, NULL);
+		} else if (!_get_opp_count(opp_table)) {
+			return 0;
 		} else {
 			dev_err(dev, "target frequency can't be 0\n");
 			ret = -EINVAL;
@@ -849,6 +851,18 @@ int dev_pm_opp_set_rate(struct device *dev, unsigned long target_freq)
 		goto put_opp_table;
 	}
 
+	/*
+	 * For IO devices which require an OPP on some platforms/SoCs
+	 * while just needing to scale the clock on some others
+	 * we look for empty OPP tables with just a clock handle and
+	 * scale only the clk. This makes dev_pm_opp_set_rate()
+	 * equivalent to a clk_set_rate()
+	 */
+	if (!_get_opp_count(opp_table)) {
+		ret = _generic_set_opp_clk_only(dev, clk, freq);
+		goto put_opp_table;
+	}
+
 	temp_freq = old_freq;
 	old_opp = _find_freq_ceil(opp_table, &temp_freq);
 	if (IS_ERR(old_opp)) {
-- 
QUALCOMM INDIA, on behalf of Qualcomm Innovation Center, Inc. is a member
of Code Aurora Forum, hosted by The Linux Foundation

