From vireshk  Wed Jun 19 19:40:24 2024
Delivered-To: viresh.kumar@linaro.org
Received: from pop.gmail.com [74.125.130.108] 	by vireshk-i7 with POP3 (fetchmail-6.4.2) 	for <vireshk@localhost> (single-drop); Wed, 19 Jun 2024 19:40:24 +0530 (IST)
Received: by 2002:a05:7208:c322:b0:86:fb06:ab4c with SMTP id s34csp303836rbf;         Wed, 19 Jun 2024 07:09:16 -0700 (PDT)
X-Forwarded-Encrypted: i=2; AJvYcCWHiDeglghaXy7DHT7oqB1uZj/xHkdDwtRaLwKwrPBtnB6uSviohQXzA6CjsHhuBenKxxiJF7KNnw/LId9U0jm5XlqvM0N8bw==
X-Google-Smtp-Source: AGHT+IEFF/f8DxVdOQfIM34+xEuYKFXabjOM1uBW7VMfIkeFPaNkMeOXpde4SgbDp0fwuPGRRDfU
X-Received: by 2002:a05:6830:98:b0:6f9:c0ac:1751 with SMTP id 46e09a7af769-700741149f8mr2760672a34.2.1718806155939;         Wed, 19 Jun 2024 07:09:15 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1718806155; cv=none;         d=google.com; s=arc-20160816;         b=fRO/tOoZfUYUKOLjjWXa5x97pKJgLtNZIaU9d4USXU25+0+/20/0fh3mGqKJgURGFa          6lwWG83iUHMQubOp9780oUPgVmSSlji6oHSTJg67GecGYeA0g48iSHySW2fNNtouN8UJ          42fLbp1aBff/1xZavpOo7Nlia3BirMIaxq+WkRE/D9h6oR/oBlTp6A2Hj+ii/8CEbHvC          cRwfRQ7UH6h8/E8ucOn69e28eC93Dwr1k7ATRtSz6htlL4SWgzMeW5m9E9nTIrlvoVvq          lfRzTj4aU9M3Bmey5zwYR1ZZBOZbO3hk0H14SBrkLXNxXf0QK20AUwwI5XIqsB9GpiaJ          owgw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;         h=content-transfer-encoding:mime-version:references:in-reply-to          :message-id:date:subject:cc:to:from:dkim-signature:dmarc-filter          :delivered-to;         bh=CDWaPf7+TN9M1cnbl/7mu5+omOHy+MPUVcUqdXnYMd8=;         fh=uTjcGXl3ZR0weqh56vSewOcZkR5SoTfxReHiFjvCeSc=;         b=vBifGHi460nok5bGQn8/tVNv/wuQG8EE7qOOICSaGMQ1Dc31loy4gIEf1bCIVfihbr          gT5v+jBFGbmTaCYXJ0cLdjzaVJSoqlBEDH2sjfzUi3MoJ1R1R6tf6LcmRUXqzmykSMhE          EBaYH9Pwg70AG7K8VJEXegoGpkLVNdKg4mBkxEisV22X2oJ1kYvK50s+NVKyx/NIaS7k          7/DbJSOAHnn5u775l4ORKRx7A8o+Nv28lyJSK/Fvi7iESrDQfCWtsFRm3F4pcHNFUJKy          /NngyArg0M5mZBF5xS4KB1DctGQ0Jr7ScrjWUj31xmy/re+T9NQF1uAnWyM6Dxib8JeD          pY8g==;         dara=google.com
ARC-Authentication-Results: i=1; mx.google.com;        dkim=pass header.i=@linaro.org header.s=google header.b=EOdwJPyF;        spf=pass (google.com: domain of srs0=ibt9=nv=linaro.org=ulf.hansson@kernel.org designates 139.178.84.217 as permitted sender) smtp.mailfrom="SRS0=IbT9=NV=linaro.org=ulf.hansson@kernel.org";        dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=linaro.org
Return-Path: <SRS0=IbT9=NV=linaro.org=ulf.hansson@kernel.org>
Received: from dfw.source.kernel.org (dfw.source.kernel.org. [139.178.84.217])         by mx.google.com with ESMTPS id 46e09a7af769-6fb5b751c67si4513841a34.220.2024.06.19.07.09.15         for <viresh.kumar@linaro.org>         (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);         Wed, 19 Jun 2024 07:09:15 -0700 (PDT)
Received-SPF: pass (google.com: domain of srs0=ibt9=nv=linaro.org=ulf.hansson@kernel.org designates 139.178.84.217 as permitted sender) client-ip=139.178.84.217;
Authentication-Results: mx.google.com;        dkim=pass header.i=@linaro.org header.s=google header.b=EOdwJPyF;        spf=pass (google.com: domain of srs0=ibt9=nv=linaro.org=ulf.hansson@kernel.org designates 139.178.84.217 as permitted sender) smtp.mailfrom="SRS0=IbT9=NV=linaro.org=ulf.hansson@kernel.org";        dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=linaro.org
Received: from smtp.kernel.org (transwarp.subspace.kernel.org [100.75.92.58]) 	by dfw.source.kernel.org (Postfix) with ESMTP id 96B3D61E30 	for <viresh.kumar@linaro.org>; Wed, 19 Jun 2024 14:09:15 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) 	id 7C50CC2BBFC; Wed, 19 Jun 2024 14:09:15 +0000 (UTC)
Delivered-To: vireshk@kernel.org
Received: from mail-lf1-f54.google.com (mail-lf1-f54.google.com [209.85.167.54]) 	(using TLSv1.3 with cipher TLS_AES_128_GCM_SHA256 (128/128 bits) 	 key-exchange X25519 server-signature RSA-PSS (2048 bits) server-digest SHA256) 	(No client certificate requested) 	by smtp.kernel.org (Postfix) with ESMTPS id DFBD5C4AF09 	for <vireshk@kernel.org>; Wed, 19 Jun 2024 14:09:13 +0000 (UTC)
DMARC-Filter: OpenDMARC Filter v1.4.1 smtp.kernel.org DFBD5C4AF09
Authentication-Results: smtp.kernel.org; dmarc=pass (p=none dis=none) header.from=linaro.org
Authentication-Results: smtp.kernel.org; spf=pass smtp.mailfrom=linaro.org
Received: by mail-lf1-f54.google.com with SMTP id 2adb3069b0e04-52bc29c79fdso8797921e87.1         for <vireshk@kernel.org>; Wed, 19 Jun 2024 07:09:13 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;         d=linaro.org; s=google; t=1718806152; x=1719410952; darn=kernel.org;         h=content-transfer-encoding:mime-version:references:in-reply-to          :message-id:date:subject:cc:to:from:from:to:cc:subject:date          :message-id:reply-to;         bh=CDWaPf7+TN9M1cnbl/7mu5+omOHy+MPUVcUqdXnYMd8=;         b=EOdwJPyFIBVNWG5IGhl7KfIIuhhCNXlk1LqJRwzLX8Qi/imZo17zj9wvMmb44tH9XA          0cqJ6kkWd2mXsNxZ6LgjTZMBBx/u2WbeXqkKXlkw9xc+kO4W5ZB3x3g0/MmSM9e4Y08H          MdpHik9ThFI+W3U2p7NNCO/IQT1vHhzMoYf9DllCOb9N6x0FxoW0OIU+Upo7EZnlggZn          utaFsVHfjxHABez9tN8uZJZNmzDdcjLiQFZs609c3zUSPtZBwINFAQIMIL6DzeKnjeVT          +xdRyrw7lukrYPlYKafLHF/pEhkeuscisdCOuJkI7VFmtoIPTIIIi0Du67A8lUEQkff5          Lu4g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;         d=1e100.net; s=20230601; t=1718806152; x=1719410952;         h=content-transfer-encoding:mime-version:references:in-reply-to          :message-id:date:subject:cc:to:from:x-gm-message-state:from:to:cc          :subject:date:message-id:reply-to;         bh=CDWaPf7+TN9M1cnbl/7mu5+omOHy+MPUVcUqdXnYMd8=;         b=Z9tiPbVuDlVXL7HsMOfp2wT1QGXuLoV1WKPl7/zwysAU5/Lo0HiHoPTwaVHUmnSbwF          R/vwS5Eog7fXHgIb+Fju2J8OijSvmLHYVSEPY9fxF8lp0MKKq1fxxi760de/Fj3U0UOV          z1YYrBmVTPHdA8KJxHN5ViAuh4IYYIwPiRb2hn4ocjYexgrjaluJTbgJDpw/pKXc+BEx          SuFcWXObqUpxR940d3jV53jZg84iU1gY6WmYJP2xX7g4bbECpxUPcxNrwOt6/fgmqC2l          rpW50loV1zIYI7XUHEVNlsySeHpEuw1FHVXMXyCvMEmiMg0sdiiUYFudtgy3getkGRQ0          TgKQ==
X-Gm-Message-State: AOJu0Yw96A5xQ++6yWHR2j12YPw6MLEDq5xZf7uvRKrwFrB9HMe1iJUX 	fOfwS2cFhYOXy6RId0DnrdjD7CUPuteIiW3sHsTDcUoTGU2qeU9mK7o+QsXy8RRvV7cDDbQnYIT 	J
X-Received: by 2002:a05:6512:e8c:b0:52c:aaa1:977e with SMTP id 2adb3069b0e04-52cca8b0e87mr2662675e87.0.1718806151472;         Wed, 19 Jun 2024 07:09:11 -0700 (PDT)
Received: from uffe-tuxpro14.. (h-178-174-189-39.A498.priv.bahnhof.se. [178.174.189.39])         by smtp.gmail.com with ESMTPSA id 2adb3069b0e04-52ca2872241sm1787003e87.124.2024.06.19.07.09.10         (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);         Wed, 19 Jun 2024 07:09:11 -0700 (PDT)
From: Ulf Hansson <ulf.hansson@linaro.org>
To: Viresh Kumar <vireshk@kernel.org>, 	Nishanth Menon <nm@ti.com>, 	Stephen Boyd <sboyd@kernel.org>
Cc: Bjorn Andersson <andersson@kernel.org>, 	Konrad Dybcio <konrad.dybcio@linaro.org>, 	Nikunj Kela <nkela@quicinc.com>, 	Prasad Sodagudi <psodagud@quicinc.com>, 	Thierry Reding <thierry.reding@gmail.com>, 	Jonathan Hunter <jonathanh@nvidia.com>, 	Ulf Hansson <ulf.hansson@linaro.org>, 	linux-pm@vger.kernel.org, 	linux-arm-kernel@lists.infradead.org, 	linux-kernel@vger.kernel.org
Subject: [PATCH 4/7] OPP: Introduce an OF helper function to inform if required-opps is used
Date: Wed, 19 Jun 2024 16:08:46 +0200
Message-Id: <20240619140849.368580-5-ulf.hansson@linaro.org>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20240619140849.368580-1-ulf.hansson@linaro.org>
References: <20240619140849.368580-1-ulf.hansson@linaro.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Length: 2888
Lines: 82

As being shown from a subsequent change to genpd, it's useful to understand
if a device's OF node has an OPP-table described and whether it contains
OPP nodes that makes use of the required-opps DT property.

For this reason, let's introduce an OPP OF helper function called
dev_pm_opp_of_has_required_opp().

Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
---
 drivers/opp/of.c       | 32 ++++++++++++++++++++++++++++++++
 include/linux/pm_opp.h |  6 ++++++
 2 files changed, 38 insertions(+)

diff --git a/drivers/opp/of.c b/drivers/opp/of.c
index 282eb5966fd0..55c8cfef97d4 100644
--- a/drivers/opp/of.c
+++ b/drivers/opp/of.c
@@ -1443,6 +1443,38 @@ int of_get_required_opp_performance_state(struct device_node *np, int index)
 }
 EXPORT_SYMBOL_GPL(of_get_required_opp_performance_state);
 
+/**
+ * dev_pm_opp_of_has_required_opp - Find out if a required-opps exists.
+ * @dev: The device to investigate.
+ *
+ * Returns true if the device's node has a "operating-points-v2" property and if
+ * the corresponding node for the opp-table describes opp nodes that uses the
+ * "required-opps" property.
+ *
+ * Return: True if a required-opps is present, else false.
+ */
+bool dev_pm_opp_of_has_required_opp(struct device *dev)
+{
+	struct device_node *opp_np, *np;
+	int count;
+
+	opp_np = _opp_of_get_opp_desc_node(dev->of_node, 0);
+	if (!opp_np)
+		return false;
+
+	np = of_get_next_available_child(opp_np, NULL);
+	of_node_put(opp_np);
+	if (!np) {
+		dev_warn(dev, "Empty OPP table\n");
+		return false;
+	}
+
+	count = of_count_phandle_with_args(np, "required-opps", NULL);
+	of_node_put(np);
+
+	return count > 0;
+}
+
 /**
  * dev_pm_opp_get_of_node() - Gets the DT node corresponding to an opp
  * @opp:	opp for which DT node has to be returned for
diff --git a/include/linux/pm_opp.h b/include/linux/pm_opp.h
index 2b6599f6037d..5fade5c4de40 100644
--- a/include/linux/pm_opp.h
+++ b/include/linux/pm_opp.h
@@ -476,6 +476,7 @@ int dev_pm_opp_of_get_sharing_cpus(struct device *cpu_dev, struct cpumask *cpuma
 struct device_node *dev_pm_opp_of_get_opp_desc_node(struct device *dev);
 struct device_node *dev_pm_opp_get_of_node(struct dev_pm_opp *opp);
 int of_get_required_opp_performance_state(struct device_node *np, int index);
+bool dev_pm_opp_of_has_required_opp(struct device *dev);
 int dev_pm_opp_of_find_icc_paths(struct device *dev, struct opp_table *opp_table);
 int dev_pm_opp_of_register_em(struct device *dev, struct cpumask *cpus);
 int dev_pm_opp_calc_power(struct device *dev, unsigned long *uW,
@@ -554,6 +555,11 @@ static inline int of_get_required_opp_performance_state(struct device_node *np,
 	return -EOPNOTSUPP;
 }
 
+static inline bool dev_pm_opp_of_has_required_opp(struct device *dev)
+{
+	return false;
+}
+
 static inline int dev_pm_opp_of_find_icc_paths(struct device *dev, struct opp_table *opp_table)
 {
 	return -EOPNOTSUPP;
-- 
2.34.1

