From vireshk  Tue Sep 15 22:41:29 2020
Delivered-To: viresh.kumar@linaro.org
Received: from pop.gmail.com [74.125.68.109] 	by vireshk-i7 with POP3 (fetchmail-6.3.26) 	for <vireshk@localhost> (single-drop); Tue, 15 Sep 2020 22:41:29 +0530 (IST)
Received: by 2002:a05:6602:2181:0:0:0:0 with SMTP id b1csp2950962iob;         Tue, 15 Sep 2020 10:11:03 -0700 (PDT)
X-Received: by 2002:a63:2fc7:: with SMTP id v190mr15009515pgv.250.1600189863482;         Tue, 15 Sep 2020 10:11:03 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1600189863; cv=none;         d=google.com; s=arc-20160816;         b=Ti1QjmMNjE/Wg0bLe1de6OrSTbt2wbjMbETda/vfRlw7U8U7zNcl7SGYbSHSdvbDYi          5ddNT7z9nyaI9zVA/UKf0E6szPW/ER5AJpg+JGD56XwacN3mPJY9HBePO9R24Q7NYRmF          /xDhueU5cPAJwjOWWY3P2HoMsnXrIPhQGpdxfXeqqqZPeSgo8bhNjuduDbvLYR9RNRW0          ZGZA/J8F6veuyFS2smrHfe965pY2aIbWeO7lKmDckm6kDYold/6/VBoLEfbxidzqyjea          PegUUS7vFfQ4fE+4l3LV8n2hs60j/2CJZT1x7/MVkXw6fjjToLb6WfFR7WqNMYvW9M6A          AxsQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;         h=content-transfer-encoding:mime-version:message-id:date:subject:cc          :to:from:dkim-signature;         bh=t80Xhl4ieaw4+4IDm2zgbCHUZGC+GFKM1u8bh3yil+k=;         b=UfC1F+u7oSQkKTz5r2hDbG1e5egc3AqaqIL+jGaW413kBhOKq4xavpWZmYWDAHH1cL          q5LhEw8iBYufC/Pz/VLiQ82pUsmjX3AB1J/cCJWcKqduH3R2Q8UBDQ7oAKvFOqcF0cpI          saJxXP27okpCyAEZ/29dGIjFT13Y4BKxPVPjQ2wdBSWjKK39IE0qPgYlS4K7Lso1PkJs          fNMI+MP+Ze9mjQ8zZ4V5gjuhbjSowrBfZNcjce6TVoB9sBfoxURwY0qp0W9G1MrOSYeE          awFCM7bHnE1E98+Nhog5mRn5O0KXml7ZojSZRskdP+NWo7wX6A+xiNcgGBtJPa5W5GZJ          t/1w==
ARC-Authentication-Results: i=1; mx.google.com;        dkim=pass header.i=@chromium.org header.s=google header.b=HBRJnVE0;        spf=pass (google.com: domain of mka@chromium.org designates 209.85.220.65 as permitted sender) smtp.mailfrom=mka@chromium.org;        dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=chromium.org
Return-Path: <mka@chromium.org>
Received: from mail-sor-f65.google.com (mail-sor-f65.google.com. [209.85.220.65])         by mx.google.com with SMTPS id jp20sor116139pjb.38.2020.09.15.10.11.03         for <viresh.kumar@linaro.org>         (Google Transport Security);         Tue, 15 Sep 2020 10:11:03 -0700 (PDT)
Received-SPF: pass (google.com: domain of mka@chromium.org designates 209.85.220.65 as permitted sender) client-ip=209.85.220.65;
Authentication-Results: mx.google.com;        dkim=pass header.i=@chromium.org header.s=google header.b=HBRJnVE0;        spf=pass (google.com: domain of mka@chromium.org designates 209.85.220.65 as permitted sender) smtp.mailfrom=mka@chromium.org;        dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=chromium.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;         d=chromium.org; s=google;         h=from:to:cc:subject:date:message-id:mime-version          :content-transfer-encoding;         bh=t80Xhl4ieaw4+4IDm2zgbCHUZGC+GFKM1u8bh3yil+k=;         b=HBRJnVE076xMyH+ZPFgWRMAbcqDlTLK3EKzvCzclTmiXZIsarEPBo/u/uCe/t2unaU          +BcFA1lMaJFc8LCsxwJ++J97q50ygi3uKm/L+OU/VkT2H0UXmbrVZpqyTTG13qlpgsPU          B1lUmGtcBzplMcrAwISvhhJpdamnXDblC94hw=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;         d=1e100.net; s=20161025;         h=x-gm-message-state:from:to:cc:subject:date:message-id:mime-version          :content-transfer-encoding;         bh=t80Xhl4ieaw4+4IDm2zgbCHUZGC+GFKM1u8bh3yil+k=;         b=orCzj9vxD5aturq5bXpwG2yzr/aRFH39HvVuFBXiHdrpIf4WvasE2kh8jnzRdpJOc0          2LtjO3QUtUkK0gDchs/4YIalsZ5hEUXsViyq04yoBcLm0lmy8IkvBvz6ke84xzlCHgEQ          +XHX0uDa7bx3d3yrY6kPAq6mgnePUhaeZI+wehySIe0riMpAF2gB4kx8nFCuJhVOLCAA          vk/+lcVCwSx7BhN51M+R8MVxt2TdzoxgDc7aY9iVUaeHK0PtcL4e7cqbh0C0/FPBE/do          6GHVdNU4QXbgcmnt5vIIXbIw57tIeA+cWKBoLGRAZZ24p378TFGB0N5L+6QJcKxnDkom          pFdA==
X-Gm-Message-State: AOAM532OTffNpBt+oc17gdXVfrxTyHVaUdkpl5GP2cs+Bl31Fsni8ndR 	GCmTqcJyAc1cU/ItONQD3GcOgg==
X-Google-Smtp-Source: ABdhPJyOY9aSbKit2ivdA6JFIddmNJ8Von035R3JQswaFSKsJXehrc6lpg8VraygWmsTae8nE81gNA==
X-Received: by 2002:a17:90a:b702:: with SMTP id l2mr363925pjr.82.1600189863016;         Tue, 15 Sep 2020 10:11:03 -0700 (PDT)
Return-Path: <mka@chromium.org>
Received: from localhost ([2620:15c:202:1:f693:9fff:fef4:e70a])         by smtp.gmail.com with ESMTPSA id a20sm13834008pfa.59.2020.09.15.10.11.02         (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);         Tue, 15 Sep 2020 10:11:02 -0700 (PDT)
From: Matthias Kaehlcke <mka@chromium.org>
To: Andy Gross <agross@kernel.org>, 	Bjorn Andersson <bjorn.andersson@linaro.org>, 	Viresh Kumar <viresh.kumar@linaro.org>, 	"Rafael J . Wysocki" <rjw@rjwysocki.net>
Cc: linux-pm@vger.kernel.org, 	linux-kernel@vger.kernel.org, 	Taniya Das <tdas@codeaurora.org>, 	linux-arm-msm@vger.kernel.org, 	Douglas Anderson <dianders@chromium.org>, 	Matthias Kaehlcke <mka@chromium.org>
Subject: [PATCH] cpufreq: qcom: Don't add frequencies without an OPP
Date: Tue, 15 Sep 2020 10:10:54 -0700
Message-Id: <20200915101007.1.Iebcd373535de8eb0aa304ad22b062a5bbc88a665@changeid>
X-Mailer: git-send-email 2.28.0.618.gf4bc123cb7-goog
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Length: 2103
Lines: 56

The driver currently adds all frequencies from the hardware LUT to
the cpufreq table, regardless of whether the corresponding OPP
exists. This prevents devices from disabling certain OPPs through
the device tree and can result in CPU frequencies for which the
interconnect bandwidth can't be adjusted. Only add frequencies
with an OPP entry.

Fixes: 55538fbc79e9 ("cpufreq: qcom: Read voltage LUT and populate OPP")
Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
---

 drivers/cpufreq/qcom-cpufreq-hw.c | 21 +++++++++++++++------
 1 file changed, 15 insertions(+), 6 deletions(-)

diff --git a/drivers/cpufreq/qcom-cpufreq-hw.c b/drivers/cpufreq/qcom-cpufreq-hw.c
index 3fb044b907a8..47b7d394d2ab 100644
--- a/drivers/cpufreq/qcom-cpufreq-hw.c
+++ b/drivers/cpufreq/qcom-cpufreq-hw.c
@@ -177,10 +177,15 @@ static int qcom_cpufreq_hw_read_lut(struct device *cpu_dev,
 			freq = cpu_hw_rate / 1000;
 
 		if (freq != prev_freq && core_count != LUT_TURBO_IND) {
-			table[i].frequency = freq;
-			qcom_cpufreq_update_opp(cpu_dev, freq, volt);
-			dev_dbg(cpu_dev, "index=%d freq=%d, core_count %d\n", i,
+			if (!qcom_cpufreq_update_opp(cpu_dev, freq, volt)) {
+				table[i].frequency = freq;
+				dev_dbg(cpu_dev, "index=%d freq=%d, core_count %d\n", i,
 				freq, core_count);
+			} else {
+				dev_warn(cpu_dev, "failed to update OPP for freq=%d\n", freq);
+				table[i].frequency = CPUFREQ_ENTRY_INVALID;
+			}
+
 		} else if (core_count == LUT_TURBO_IND) {
 			table[i].frequency = CPUFREQ_ENTRY_INVALID;
 		}
@@ -197,9 +202,13 @@ static int qcom_cpufreq_hw_read_lut(struct device *cpu_dev,
 			 * as the boost frequency
 			 */
 			if (prev->frequency == CPUFREQ_ENTRY_INVALID) {
-				prev->frequency = prev_freq;
-				prev->flags = CPUFREQ_BOOST_FREQ;
-				qcom_cpufreq_update_opp(cpu_dev, prev_freq, volt);
+				if (!qcom_cpufreq_update_opp(cpu_dev, prev_freq, volt)) {
+					prev->frequency = prev_freq;
+					prev->flags = CPUFREQ_BOOST_FREQ;
+				} else {
+					dev_warn(cpu_dev, "failed to update OPP for freq=%d\n",
+						 freq);
+				}
 			}
 
 			break;
-- 
2.28.0.618.gf4bc123cb7-goog

