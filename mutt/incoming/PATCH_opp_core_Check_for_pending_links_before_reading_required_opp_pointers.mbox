From vireshk  Mon Aug 23 08:29:03 2021
Delivered-To: viresh.kumar@linaro.org
Received: from pop.gmail.com [142.250.4.109] 	by vireshk-i7 with POP3 (fetchmail-6.4.2) 	for <vireshk@localhost> (single-drop); Mon, 23 Aug 2021 08:29:03 +0530 (IST)
Received: by 2002:a5e:a712:0:0:0:0:0 with SMTP id b18csp1520709iod;         Sun, 22 Aug 2021 10:54:40 -0700 (PDT)
X-Google-Smtp-Source: ABdhPJzgVJY3bmd/2OX3jTTxU4Bxq43PVr8gyKchWVnVuFy8FCFCTv4YLYYqY70jzzbarAn2+nr3
X-Received: by 2002:a17:90a:4894:: with SMTP id b20mr16159331pjh.13.1629654879898;         Sun, 22 Aug 2021 10:54:39 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1629654879; cv=none;         d=google.com; s=arc-20160816;         b=iOlgzIVrnAfIziP4/Da4bnqPbfOZ7fiZEP5NhPaVGc+jKO6d5Gd430KhcPUXn7mZLR          uQ9tm/cEUrcs6QPiymJBsOZsBTbRwTU7Y0BuTcsQqla0KIf1W5Qkq+IVul4aDu20DX+2          WeOCV83CG3wub8EDGulMR+LI/UCcdWCZYxBlBD2bA2GDqKLQYPPcGPJr4t0N0FXvUVdf          wEWANo443JmLT1rOpBJbVewHHjKxjWNqFLyrkUxU0Woh2lM+TsEsqDK2kNhWbmn9Z5pb          9eSKuZucx4NT8wPrcRmKiZaP2nOo5Rm93cqu4WnUEPaXTjPhw32Er2jCZq3am1FGGCD/          nGIg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;         h=content-transfer-encoding:mime-version:message-id:date:subject:cc          :to:from:dmarc-filter:delivered-to;         bh=THIi4m0Jq36aMcQrmwuY26fGXfRGMjrigTMJsC9J84w=;         b=nVcpIEVxERHgH+dtdnLJp6iHUjBZkznwI34cV3HAKR3uxhDmGNgaXM+Uszm2xYiKFz          8NkyTbI3tKr01ejVopcVpI5oSeaZskVu8yfo7zN63LJFYBmaMnbU+biVLzvo7rKQb4fy          rWTOFEO0aVJdJ0IpORmZJnwQSb+mZvA14RyWpf/sxtKehYwz0F0s56ncBODCtcjIJRme          1ctZPuO+0skfmGpCAtMa+0DyfOH9MM1wGmhgSMhmTJbIZz423aPB+T17Cz4mxkEX5LcH          SQ3ZLEAw4NIfohIHqO6qN2GlnmOZuW7x4qjpqoscbtmwubfQ9eimN/swpJ2h2W3WSBWt          yxsg==
ARC-Authentication-Results: i=1; mx.google.com;        spf=pass (google.com: domain of srs0=kgvn=nn=somainline.org=marijn.suijten@kernel.org designates 198.145.29.99 as permitted sender) smtp.mailfrom="SRS0=kGvN=NN=somainline.org=marijn.suijten@kernel.org"
Return-Path: <SRS0=kGvN=NN=somainline.org=marijn.suijten@kernel.org>
Received: from mail.kernel.org (mail.kernel.org. [198.145.29.99])         by mx.google.com with ESMTPS id m5si15888004pgu.453.2021.08.22.10.54.39         for <viresh.kumar@linaro.org>         (version=TLS1_2 cipher=ECDHE-ECDSA-AES128-GCM-SHA256 bits=128/128);         Sun, 22 Aug 2021 10:54:39 -0700 (PDT)
Received-SPF: pass (google.com: domain of srs0=kgvn=nn=somainline.org=marijn.suijten@kernel.org designates 198.145.29.99 as permitted sender) client-ip=198.145.29.99;
Authentication-Results: mx.google.com;        spf=pass (google.com: domain of srs0=kgvn=nn=somainline.org=marijn.suijten@kernel.org designates 198.145.29.99 as permitted sender) smtp.mailfrom="SRS0=kGvN=NN=somainline.org=marijn.suijten@kernel.org"
Received: by mail.kernel.org (Postfix) 	id 55A016124E; Sun, 22 Aug 2021 17:54:39 +0000 (UTC)
Delivered-To: vireshk@kernel.org
X-Greylist: delayed 599 seconds by postgrey-1.37 at mail.kernel.org; Sun, 22 Aug 2021 17:54:38 UTC
DMARC-Filter: OpenDMARC Filter v1.4.1 mail.kernel.org 400856125F
Authentication-Results: mail.kernel.org; dmarc=none (p=none dis=none) header.from=somainline.org
Authentication-Results: mail.kernel.org; spf=pass smtp.mailfrom=somainline.org
Received: from relay07.th.seeweb.it (relay07.th.seeweb.it [5.144.164.168]) 	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits)) 	(No client certificate requested) 	by mail.kernel.org (Postfix) with ESMTPS id 400856125F 	for <vireshk@kernel.org>; Sun, 22 Aug 2021 17:54:38 +0000 (UTC)
Received: from Marijn-Arch-PC.localdomain (94-209-165-62.cable.dynamic.v4.ziggo.nl [94.209.165.62]) 	(using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits) 	 key-exchange X25519 server-signature RSA-PSS (2048 bits) server-digest SHA256) 	(No client certificate requested) 	by m-r2.th.seeweb.it (Postfix) with ESMTPSA id 3BC423E7B4; 	Sun, 22 Aug 2021 19:44:37 +0200 (CEST)
From: Marijn Suijten <marijn.suijten@somainline.org>
To: phone-devel@vger.kernel.org
Cc: ~postmarketos/upstreaming@lists.sr.ht, 	AngeloGioacchino Del Regno <angelogioacchino.delregno@somainline.org>, 	Konrad Dybcio <konrad.dybcio@somainline.org>, 	Martin Botka <martin.botka@somainline.org>, 	Jami Kettunen <jami.kettunen@somainline.org>, 	Pavel Dubrova <pashadubrova@gmail.com>, 	Marijn Suijten <marijn.suijten@somainline.org>, 	Viresh Kumar <vireshk@kernel.org>, 	Nishanth Menon <nm@ti.com>, 	Stephen Boyd <sboyd@kernel.org>, 	Hsin-Yi Wang <hsinyi@chromium.org>, 	linux-pm@vger.kernel.org, 	linux-kernel@vger.kernel.org
Subject: [PATCH] opp: core: Check for pending links before reading required_opp pointers
Date: Sun, 22 Aug 2021 19:44:10 +0200
Message-Id: <20210822174410.82595-1-marijn.suijten@somainline.org>
X-Mailer: git-send-email 2.33.0
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Length: 1701
Lines: 45

Commit 4fa82a87ba55 ("opp: Allow required-opps to be used for non genpd
use cases") dereferences the pointers in required_opp_tables but these
might be set to an ERR_PTR if the list still has lazy links pending,
resulting in segfaults.  Prior to this patch IS_ERR was also checked on
required_opp_tables[i] before reading ->is_genpd inside
_opp_table_alloc_required_tables, which is at the same time the
predicate to add this table to the lazy list.  This segfault is solved
by reordering the checks to bail on lazy pending tables before reading
->is_genpd.

Fixes: 4fa82a87ba55 ("opp: Allow required-opps to be used for non genpd use cases")
Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@somainline.org>
Signed-off-by: Marijn Suijten <marijn.suijten@somainline.org>
---
 drivers/opp/core.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/opp/core.c b/drivers/opp/core.c
index b335c077f215..4dd26a165c91 100644
--- a/drivers/opp/core.c
+++ b/drivers/opp/core.c
@@ -893,6 +893,10 @@ static int _set_required_opps(struct device *dev,
 	if (!required_opp_tables)
 		return 0;
 
+	/* required-opps not fully initialized yet */
+	if (lazy_linking_pending(opp_table))
+		return -EBUSY;
+
 	/*
 	 * We only support genpd's OPPs in the "required-opps" for now, as we
 	 * don't know much about other use cases. Error out if the required OPP
@@ -903,10 +907,6 @@ static int _set_required_opps(struct device *dev,
 		return -ENOENT;
 	}
 
-	/* required-opps not fully initialized yet */
-	if (lazy_linking_pending(opp_table))
-		return -EBUSY;
-
 	/* Single genpd case */
 	if (!genpd_virt_devs)
 		return _set_required_opp(dev, dev, opp, 0);
-- 
2.33.0

