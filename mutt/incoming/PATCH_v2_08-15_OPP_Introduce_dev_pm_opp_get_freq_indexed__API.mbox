From vireshk  Thu Jul 20 11:13:53 2023
Delivered-To: viresh.kumar@linaro.org
Received: from pop.gmail.com [64.233.170.109] 	by vireshk-i7 with POP3 (fetchmail-6.4.2) 	for <vireshk@localhost> (single-drop); Thu, 20 Jul 2023 11:13:53 +0530 (IST)
Received: by 2002:a05:7208:5b05:b0:6d:a1b7:b892 with SMTP id gx5csp1604380rbb;         Wed, 19 Jul 2023 22:42:35 -0700 (PDT)
X-Google-Smtp-Source: APBJJlEG/hbs6TdM6jI+VhZfaznTwiRlemCmn01bR7Ux5q3NOHf7cZrTxRxHQKgGT6fbeGQLp1tA
X-Received: by 2002:a05:6808:6c8:b0:3a4:17cd:dd31 with SMTP id m8-20020a05680806c800b003a417cddd31mr656327oih.14.1689831755651;         Wed, 19 Jul 2023 22:42:35 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1689831755; cv=none;         d=google.com; s=arc-20160816;         b=HfWcQ76NaL24xvuk6Wyvft3GBcMIpfsPf7hx7l7T7n6uFWdDLlcbOgj1ZqqP6NqZXY          sP5Oy6zunk2nOFIpk4vd0qxpV7dZiTvTNekUSUz6BsyE2mp4Dcn4RnNgezPeNukuZ38d          Hnx2Dz3M+qIN3ABS6d6+874QUIawvxOHIhCdRFvdPXAhxo9Z3bbJ9wQF+yvx2PGVeAKO          h32ZXrogEKtkCDwwjMRPSw7CZtt1HAyeAn+rXDciiHS6CJNfAmFVZf491U1MV/4USSJa          LbNMjlx5NlT6BXlg2+YieRK3VCKXlFtAGz8ddsTH/qBVBUbThXQX940CU21767sMGvWc          xnlA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;         h=content-transfer-encoding:mime-version:references:in-reply-to          :message-id:date:subject:cc:to:from:dkim-signature:dmarc-filter          :delivered-to;         bh=JVAw7udukL38zwKtT4457ZqK6it2VdBXoqf1V9p3kc4=;         fh=3109qC6i7dREPMf79CsN/jl+9zRd4/rV6IOQmZMqsxU=;         b=te6xauPQsyb//KY4ArF0DMpuMtIIzzodUdoGGNinoe2C6b8F8VjfsaoeuduGfPuou2          F/ufZgZJmb+Bm80/JBJUhY37ZLBGUaSUxxDUE5WAGgFpqr+BFbsKpbjT75ntDNJIbLED          W1ZASKZ92TFOL24lyu+zvVq+DgF46HX2AGJoQT+znOr3j3CWDyBcHZVwyjR9VLcSj0Q1          +Kf6EO7Vb3S9aaDNgBzVEPkINMSdTuwcsbqqRZn9W3qGYPAaEGQ6zTNILeFriz8eslXz          wdBAm04wpRiX9nKPUhuDh8EHgp+a4c5Aui5aIxsaSkuU34c2dg9B4vTeMf3yv6j7RuBi          ZHqA==
ARC-Authentication-Results: i=1; mx.google.com;        dkim=pass header.i=@linaro.org header.s=google header.b=rDv9lnxj;        spf=pass (google.com: domain of srs0=c2ao=dg=linaro.org=manivannan.sadhasivam@kernel.org designates 139.178.84.217 as permitted sender) smtp.mailfrom="SRS0=c2ao=DG=linaro.org=manivannan.sadhasivam@kernel.org";        dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=linaro.org
Return-Path: <SRS0=c2ao=DG=linaro.org=manivannan.sadhasivam@kernel.org>
Received: from dfw.source.kernel.org (dfw.source.kernel.org. [139.178.84.217])         by mx.google.com with ESMTPS id bi40-20020a05680818a800b003a1d2df341csi50349oib.311.2023.07.19.22.42.35         for <viresh.kumar@linaro.org>         (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);         Wed, 19 Jul 2023 22:42:35 -0700 (PDT)
Received-SPF: pass (google.com: domain of srs0=c2ao=dg=linaro.org=manivannan.sadhasivam@kernel.org designates 139.178.84.217 as permitted sender) client-ip=139.178.84.217;
Authentication-Results: mx.google.com;        dkim=pass header.i=@linaro.org header.s=google header.b=rDv9lnxj;        spf=pass (google.com: domain of srs0=c2ao=dg=linaro.org=manivannan.sadhasivam@kernel.org designates 139.178.84.217 as permitted sender) smtp.mailfrom="SRS0=c2ao=DG=linaro.org=manivannan.sadhasivam@kernel.org";        dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=linaro.org
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140]) 	(using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits) 	 key-exchange X25519 server-signature RSA-PSS (2048 bits)) 	(No client certificate requested) 	by dfw.source.kernel.org (Postfix) with ESMTPS id 51ACC618B0 	for <viresh.kumar@linaro.org>; Thu, 20 Jul 2023 05:42:35 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) 	id 04F4CC433D9; Thu, 20 Jul 2023 05:42:34 +0000 (UTC)
Delivered-To: vireshk@kernel.org
Received: from mail-pl1-f178.google.com (mail-pl1-f178.google.com [209.85.214.178]) 	(using TLSv1.3 with cipher TLS_AES_128_GCM_SHA256 (128/128 bits) 	 key-exchange X25519 server-signature RSA-PSS (2048 bits) server-digest SHA256) 	(No client certificate requested) 	by smtp.kernel.org (Postfix) with ESMTPS id 476B6C43395 	for <vireshk@kernel.org>; Thu, 20 Jul 2023 05:42:32 +0000 (UTC)
DMARC-Filter: OpenDMARC Filter v1.4.1 smtp.kernel.org 476B6C43395
Authentication-Results: smtp.kernel.org; dmarc=pass (p=none dis=none) header.from=linaro.org
Authentication-Results: smtp.kernel.org; spf=pass smtp.mailfrom=linaro.org
Received: by mail-pl1-f178.google.com with SMTP id d9443c01a7336-1b8ad356f03so2232415ad.1         for <vireshk@kernel.org>; Wed, 19 Jul 2023 22:42:32 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;         d=linaro.org; s=google; t=1689831751; x=1690436551;         h=content-transfer-encoding:mime-version:references:in-reply-to          :message-id:date:subject:cc:to:from:from:to:cc:subject:date          :message-id:reply-to;         bh=JVAw7udukL38zwKtT4457ZqK6it2VdBXoqf1V9p3kc4=;         b=rDv9lnxjRFZ0PZj9f9xOPG18lHjHObFlF6w/mOl7Yd1uLQLmbiZlIdMcolqKvoVdqF          PkXrrCF85nkj7JfH1Qi48QZ5+08l0aZN91puXJ/F4RamZR+ol/43Rrp8JB3An1wlv9ic          XCKqJegJO/I4zSGp4gz+pqGlvkj/y9ktuU90Bq146G5r9WsWH1wlg4cY1SYHotrImPmj          8gsPXgULIlJEBzIy0BeYK42NMRtE5VT1qgx+FcuhgUY1DtiDCqvY5eBA9zxpFIr08AOP          g28VVO2eJoxOAZeF/P/fvc78hOGXCLrllFdLk4WFTeXGxkzNe6HJlA9uArJYMFZ6pY6n          oMpg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;         d=1e100.net; s=20221208; t=1689831751; x=1690436551;         h=content-transfer-encoding:mime-version:references:in-reply-to          :message-id:date:subject:cc:to:from:x-gm-message-state:from:to:cc          :subject:date:message-id:reply-to;         bh=JVAw7udukL38zwKtT4457ZqK6it2VdBXoqf1V9p3kc4=;         b=fuiyNgfHuyx43cXS0gx1OTl88WKUuET0tyHALBqsZR0JfVq2I3t5xVv325OBa/BQkV          OeT50Hd5Bz8ekWkRBNHiemyB87S84aHCVLQt+0RkW3FEAPUE0Ag7+1rT04XTLAt/gjWO          rsOql6U2dB9pwhERaeIpM10Cr1GBQf6w/SF7JLN7btUdzCLtF4QegrCNBffE/qwcsRA0          kDFmTLCZYFMu11f0/8KYOJRs3pJp9RtaYOM1OmSr5riFXRWXNyfmrvneaZjihufUIy2W          dHTok9ZGhFM/sq30OPjHbOQGDTCusIVH+K2fL6TzJs/ZEHTDt+8SQb3bSjQE3TSN4LLH          P+sQ==
X-Gm-Message-State: ABy/qLZ4RbFO1koOZi5XZjfOzJDJuYqCtybOT3rOcQnhsZjNUuooSBZ/ 	FsOhQ0UpFHN2fS0+QefhBwrFDQiIy4PbAB4uhA==
X-Received: by 2002:a17:902:e752:b0:1b9:ce7a:8603 with SMTP id p18-20020a170902e75200b001b9ce7a8603mr4854532plf.66.1689831751480;         Wed, 19 Jul 2023 22:42:31 -0700 (PDT)
Received: from localhost.localdomain ([117.206.119.70])         by smtp.gmail.com with ESMTPSA id r2-20020a170902be0200b001b85bb5fd77sm263367pls.119.2023.07.19.22.42.24         (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);         Wed, 19 Jul 2023 22:42:31 -0700 (PDT)
From: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
To: vireshk@kernel.org, 	nm@ti.com, 	sboyd@kernel.org, 	myungjoo.ham@samsung.com, 	kyungmin.park@samsung.com, 	cw00.choi@samsung.com, 	andersson@kernel.org, 	konrad.dybcio@linaro.org, 	robh+dt@kernel.org, 	krzysztof.kozlowski+dt@linaro.org, 	conor+dt@kernel.org, 	jejb@linux.ibm.com, 	martin.petersen@oracle.com
Cc: alim.akhtar@samsung.com, 	avri.altman@wdc.com, 	bvanassche@acm.org, 	linux-scsi@vger.kernel.org, 	linux-pm@vger.kernel.org, 	linux-arm-msm@vger.kernel.org, 	devicetree@vger.kernel.org, 	quic_asutoshd@quicinc.com, 	quic_cang@quicinc.com, 	quic_nitirawa@quicinc.com, 	quic_narepall@quicinc.com, 	quic_bhaskarv@quicinc.com, 	quic_richardp@quicinc.com, 	quic_nguyenb@quicinc.com, 	quic_ziqichen@quicinc.com, 	bmasney@redhat.com, 	krzysztof.kozlowski@linaro.org, 	linux-kernel@vger.kernel.org, 	Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
Subject: [PATCH v2 08/15] OPP: Introduce dev_pm_opp_get_freq_indexed() API
Date: Thu, 20 Jul 2023 11:10:53 +0530
Message-Id: <20230720054100.9940-9-manivannan.sadhasivam@linaro.org>
X-Mailer: git-send-email 2.25.1
In-Reply-To: <20230720054100.9940-1-manivannan.sadhasivam@linaro.org>
References: <20230720054100.9940-1-manivannan.sadhasivam@linaro.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Status: RO
Content-Length: 2420
Lines: 72

In the case of devices with multiple clocks, drivers need to specify the
frequency index for the OPP framework to get the specific frequency within
the required OPP. So let's introduce the dev_pm_opp_get_freq_indexed() API
accepting the frequency index as an argument.

Signed-off-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
---
 drivers/opp/core.c     | 22 ++++++++++++++++++++++
 include/linux/pm_opp.h |  8 ++++++++
 2 files changed, 30 insertions(+)

diff --git a/drivers/opp/core.c b/drivers/opp/core.c
index a6d0b6b18e0e..66dc0d0cfaed 100644
--- a/drivers/opp/core.c
+++ b/drivers/opp/core.c
@@ -197,6 +197,28 @@ unsigned long dev_pm_opp_get_freq(struct dev_pm_opp *opp)
 }
 EXPORT_SYMBOL_GPL(dev_pm_opp_get_freq);
 
+/**
+ * dev_pm_opp_get_freq_indexed() - Gets the frequency corresponding to an
+ *				   available opp with specified index
+ * @opp: opp for which frequency has to be returned for
+ * @index: index of the frequency within the required opp
+ *
+ * Return: frequency in hertz corresponding to the opp with specified index,
+ * else return 0
+ */
+unsigned long dev_pm_opp_get_freq_indexed(struct dev_pm_opp *opp, u32 index)
+{
+	struct opp_table *opp_table = opp->opp_table;
+
+	if (IS_ERR_OR_NULL(opp) || index >= opp_table->clk_count) {
+		pr_err("%s: Invalid parameters\n", __func__);
+		return 0;
+	}
+
+	return opp->rates[index];
+}
+EXPORT_SYMBOL_GPL(dev_pm_opp_get_freq_indexed);
+
 /**
  * dev_pm_opp_get_level() - Gets the level corresponding to an available opp
  * @opp:	opp for which level value has to be returned for
diff --git a/include/linux/pm_opp.h b/include/linux/pm_opp.h
index 991f54da79b5..97eb6159fb93 100644
--- a/include/linux/pm_opp.h
+++ b/include/linux/pm_opp.h
@@ -105,6 +105,8 @@ unsigned long dev_pm_opp_get_power(struct dev_pm_opp *opp);
 
 unsigned long dev_pm_opp_get_freq(struct dev_pm_opp *opp);
 
+unsigned long dev_pm_opp_get_freq_indexed(struct dev_pm_opp *opp, u32 index);
+
 unsigned int dev_pm_opp_get_level(struct dev_pm_opp *opp);
 
 unsigned int dev_pm_opp_get_required_pstate(struct dev_pm_opp *opp,
@@ -211,6 +213,12 @@ static inline unsigned long dev_pm_opp_get_freq(struct dev_pm_opp *opp)
 	return 0;
 }
 
+static inline unsigned long dev_pm_opp_get_freq_indexed(struct dev_pm_opp *opp,
+						      u32 index)
+{
+	return 0;
+}
+
 static inline unsigned int dev_pm_opp_get_level(struct dev_pm_opp *opp)
 {
 	return 0;
-- 
2.25.1

