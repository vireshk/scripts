From vireshk  Wed Jan 22 19:10:16 2025
Delivered-To: viresh.kumar@linaro.org
Received: from pop.gmail.com [74.125.200.109] 	by vireshk-i7 with POP3 (fetchmail-6.4.2) 	for <vireshk@localhost> (single-drop); Wed, 22 Jan 2025 19:10:16 +0530 (IST)
Received: by 2002:a05:7208:3806:b0:95:4a50:4068 with SMTP id iu6csp699565rbb;         Wed, 22 Jan 2025 05:39:57 -0800 (PST)
X-Google-Smtp-Source: AGHT+IFnbQNi+gYeWPBrjdqq5GjArDEpNGzPTk8m47yWEmreh67jEVI6EPNv4uRJGBOTapdl+pOy
X-Received: by 2002:a05:6214:20c1:b0:6d8:960e:5785 with SMTP id 6a1803df08f44-6e1b2175a5fmr316349256d6.13.1737553197327;         Wed, 22 Jan 2025 05:39:57 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1737553197; cv=none;         d=google.com; s=arc-20240605;         b=QR/tjnXS6tK0zEB1K5vm33c+JRMLQUM5DRarDeiynE1mHjpI6yjgs6ZRrCqce6EvZ/          65lzVc+yb0J5G8dbab2SF44yTxpLbRMzNIaVi93JHuxkb4dYw5jNEspI6LEOBbLly4hs          dbkZvTNMJSUML+E8DF/y4t04ggO+hlbuIr6c9oZyoTFDKfBTwDibmZNco2bTvT6ArGPw          aevqNduBqwwbLEFVjOx091526/7T4aeVFzm9Lh8eh8+fwC6SS7P7a6qg2u+tcDlcRT94          dnL6P9HL2YAJm1XFW70S12qAzOjSGgW8JsyOHJNsGx26+PRgINERmgganvT+4xmKbdl1          4euA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20240605;         h=content-transfer-encoding:mime-version:references:in-reply-to          :message-id:date:subject:cc:to:from:feedback-id:dkim-signature          :dkim-signature;         bh=9XTOuHU1krjox5MI4CtiJPj+ohcAVmrgkb5DXphKy48=;         fh=iuLiFrXvkk1K7XWuNo9ihPvmGQx2FoCFok5YlyVctJ0=;         b=eIBsFbgs7UHU5qovVxY5c0jXDdgGIY4zHL8N3u+rfKscJl33o9dcvMOjAcqynbvxyA          jGQOg09Jv5lSiBKyxN+iyKjxmTiNMJhaDMC1k+EI4AyufsojAjVAnmWgiqdoN5r7kit3          SR7tW8MpnlVYCXKtU3Khu2OnfSzSA1W4SCMYRzgX4dUDI0xhmlxpPh0uZCOa0ZSVnFAI          vqoK0rAx7N1idVCWYbFXcZaqX/1TxBSEnMiimRlQkL89aXMyloWLEjzBURk+lj0ZHTCC          Vt1PAo8EAMm4cr7JhanXLk/0cT/MsUaB1CTHbF13K/fByYJL9hWcER0m/2Y9hY9rxBQP          X2MA==;         dara=google.com
ARC-Authentication-Results: i=1; mx.google.com;        dkim=pass header.i=@astier.eu header.s=fm2 header.b=D9MCAh+x;        dkim=pass header.i=@messagingengine.com header.s=fm3 header.b=sDkzR72w;        spf=pass (google.com: domain of anisse@astier.eu designates 103.168.172.147 as permitted sender) smtp.mailfrom=anisse@astier.eu
Return-Path: <anisse@astier.eu>
Received: from fout-a4-smtp.messagingengine.com (fout-a4-smtp.messagingengine.com. [103.168.172.147])         by mx.google.com with ESMTPS id 6a1803df08f44-6e1afcda1dasi160561646d6.249.2025.01.22.05.39.57         (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);         Wed, 22 Jan 2025 05:39:57 -0800 (PST)
Received-SPF: pass (google.com: domain of anisse@astier.eu designates 103.168.172.147 as permitted sender) client-ip=103.168.172.147;
Authentication-Results: mx.google.com;        dkim=pass header.i=@astier.eu header.s=fm2 header.b=D9MCAh+x;        dkim=pass header.i=@messagingengine.com header.s=fm3 header.b=sDkzR72w;        spf=pass (google.com: domain of anisse@astier.eu designates 103.168.172.147 as permitted sender) smtp.mailfrom=anisse@astier.eu
Received: from phl-compute-10.internal (phl-compute-10.phl.internal [10.202.2.50]) 	by mailfout.phl.internal (Postfix) with ESMTP id 0620B138029E; 	Wed, 22 Jan 2025 08:39:57 -0500 (EST)
Received: from phl-mailfrontend-01 ([10.202.2.162])   by phl-compute-10.internal (MEProxy); Wed, 22 Jan 2025 08:39:57 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=astier.eu; h=cc 	:cc:content-transfer-encoding:content-type:date:date:from:from 	:in-reply-to:in-reply-to:message-id:mime-version:references 	:reply-to:subject:subject:to:to; s=fm2; t=1737553197; x= 	1737639597; bh=9XTOuHU1krjox5MI4CtiJPj+ohcAVmrgkb5DXphKy48=; b=D 	9MCAh+xX6k/h6GsQT+6e9FvdDoT2clPg11iEMBH+80SYO6n94Zfee7aVdg5ee2Tg 	Rnbkzy/L8jKFllXYzK0ZwsmAYqPAatr3A/rPv6urTr77rQxF/olryg/Nvup/ZRvR 	AdEirA/dYRZC5sBiIRlyXsgcLFI7tSrWvfCreAfItdX94p8pddnF/UAVmUetw+iX 	/bAao62P65Wp4E5MVgqhA5P8/PJcp9PL12oRzTjf5WoL8RXQxhxESgAEiDPxHW9m 	3R1wfyWCAbb983SzbBBB8N0T5BpMLeEdcw81aFg1jgxoIuGfNwxYzYxOAunnnt48 	ng+KLZ4z23DRRAvMLTjJw==
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d= 	messagingengine.com; h=cc:cc:content-transfer-encoding 	:content-type:date:date:feedback-id:feedback-id:from:from 	:in-reply-to:in-reply-to:message-id:mime-version:references 	:reply-to:subject:subject:to:to:x-me-proxy:x-me-sender 	:x-me-sender:x-sasl-enc; s=fm3; t=1737553197; x=1737639597; bh=9 	XTOuHU1krjox5MI4CtiJPj+ohcAVmrgkb5DXphKy48=; b=sDkzR72wE91eQslWS 	GlT70qkMtdwbV5QDv79qZv9hAT9F2u8Jr31XeDEHISQ4oH9Idjw0TOkgOXFe4UlK 	zSDJLWzuFS5Dvy6Z54ujCJSnzLVY6FRRfKMe9vQLBFOICh+S9r7W7qaVzk9mQ0oj 	1+Y8UI1gBQk7FJul66fcOZmxX3Z6rN8aEJsFpNiLr/nbkayK2YZdMG0i4uJi+kW3 	Sy9u0cuqw7EufRlMqKdGyjhI4aRi+0Dy3JG0iqxG5vvmBVfGMSypD/0jnT4jMKzz 	DGRomkR6tO9qB7B41a3xe2+aVjacuZ0UdAW5OtQDosyBJJq6yHhyyljeCtyNBzU4 	/qJWA==
X-ME-Sender: <xms:LPWQZ1riR9ruxfSGsUVnNnx9UwaVGURsYxoV85oKDR0HESNDf8wNIg>     <xme:LPWQZ3pY5oQ_WdXBKj5pFfaR1b0RexJCMseBXVrIG8jbK4eRr82ksMPQON0S933ry     THsUTTRSYJZOGWJvWI>
X-ME-Received: <xmr:LPWQZyOgad2UJROrMbnOpBa_bC6TsmWQeTUR8Ei0vm4iXZfsVgE1DHcM6ogroJvmseiluton0AgVfN4HPKa33Q>
X-ME-Proxy-Cause: gggruggvucftvghtrhhoucdtuddrgeefuddrudejfedgudektdcutefuodetggdotefrod     ftvfcurfhrohhfihhlvgemucfhrghsthforghilhdpggftfghnshhusghstghrihgsvgdp     uffrtefokffrpgfnqfghnecuuegrihhlohhuthemuceftddtnecusecvtfgvtghiphhivg     hnthhsucdlqddutddtmdenucfjughrpefhvfevufffkffojghfggfgsedtkeertdertddt     necuhfhrohhmpeetnhhishhsvgcutehsthhivghruceorghnihhsshgvsegrshhtihgvrh     drvghuqeenucggtffrrghtthgvrhhnpeduudduheffiefgfeekgfehhfdujeffgfeffffg     tddvjeehveefveeuhfehhfetfeenucevlhhushhtvghrufhiiigvpedtnecurfgrrhgrmh     epmhgrihhlfhhrohhmpegrnhhishhsvgesrghsthhivghrrdgvuhdpnhgspghrtghpthht     ohepudeipdhmohguvgepshhmthhpohhuthdprhgtphhtthhopehvihhrvghshhdrkhhumh     grrheslhhinhgrrhhordhorhhgpdhrtghpthhtoheprhgrfhgrvghlsehkvghrnhgvlhdr     ohhrghdprhgtphhtthhopehojhgvuggrsehkvghrnhgvlhdrohhrghdprhgtphhtthhope     grlhgvgidrghgrhihnohhrsehgmhgrihhlrdgtohhmpdhrtghpthhtohepsghoqhhunhdr     fhgvnhhgsehgmhgrihhlrdgtohhmpdhrtghpthhtohepghgrrhihsehgrghrhihguhhord     hnvghtpdhrtghpthhtohepsghjohhrnhefpghghhesphhrohhtohhnmhgrihhlrdgtohhm     pdhrtghpthhtohepsggvnhhnohdrlhhoshhsihhnsehprhhothhonhdrmhgvpdhrtghpth     htoheprgdrhhhinhgusghorhhgsehkvghrnhgvlhdrohhrgh
X-ME-Proxy: <xmx:LPWQZw4NAGv6QGBm7umcYJ2J2_RtFzpTuMvUQdjRKBe9uiZ7GEXoqA>     <xmx:LPWQZ07n6wMHSQ029OS0gekCBScgq4X71m2ODAvB-09qtckyUr-WlA>     <xmx:LPWQZ4gsEP4L2n_4DuV6Nb2PrcX032q-YfkFq3e053yWyL3herRlrQ>     <xmx:LPWQZ2634iSBIdSyIKwdBGMqW8GgDNPSXTgoxpATqB_2O2GY6Dm_xg>     <xmx:LPWQZwqkIKmJBh7ZeEZYNEF_llgZzkpvSyPz_UxDaPdjrRRKYDeq_jKr>
Feedback-ID: iccec46d4:Fastmail
Received: by mail.messagingengine.com (Postfix) with ESMTPA; Wed,  22 Jan 2025 08:39:54 -0500 (EST)
From: Anisse Astier <anisse@astier.eu>
To: Viresh Kumar <viresh.kumar@linaro.org>
Cc: "Rafael J . Wysocki" <rafael@kernel.org>, 	Miguel Ojeda <ojeda@kernel.org>, 	Alex Gaynor <alex.gaynor@gmail.com>, 	Boqun Feng <boqun.feng@gmail.com>, 	Gary Guo <gary@garyguo.net>, 	=?UTF-8?q?Bj=C3=B6rn=20Roy=20Baron?= <bjorn3_gh@protonmail.com>, 	Benno Lossin <benno.lossin@proton.me>, 	Andreas Hindborg <a.hindborg@kernel.org>, 	Alice Ryhl <aliceryhl@google.com>, 	Trevor Gross <tmgross@umich.edu>, 	linux-pm@vger.kernel.org, 	Vincent Guittot <vincent.guittot@linaro.org>, 	linux-kernel@vger.kernel.org, 	rust-for-linux@vger.kernel.org, 	Anisse Astier <anisse@astier.eu>
Subject: [PATCH v2] rust: macros: enable use of hyphens in module names
Date: Wed, 22 Jan 2025 14:39:52 +0100
Message-ID: <20250122133952.501055-1-anisse@astier.eu>
X-Mailer: git-send-email 2.48.1
In-Reply-To: <20250122131812.466080-1-anisse@astier.eu>
References: <20250122131812.466080-1-anisse@astier.eu>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

Some modules might need naming that contains hyphens "-" to match the
auto-probing by name in the platform devices that comes from the device
tree.

But rust identifiers cannot contain hyphens, so replace the module name
by an underscore anywhere we'd use it as an identifier.

Signed-off-by: Anisse Astier <anisse@astier.eu>
---
Hello,

Change since v1:
 - rebase on branch rfl/staging/dev

Sorry for sending a v2 so quickly, but v1 was based on the wrong branch :-/

Kind regards,

Anisse
---
 rust/macros/module.rs | 17 ++++++++++-------
 1 file changed, 10 insertions(+), 7 deletions(-)

diff --git a/rust/macros/module.rs b/rust/macros/module.rs
index cdf94f4982df..1eff30d2ca6a 100644
--- a/rust/macros/module.rs
+++ b/rust/macros/module.rs
@@ -182,7 +182,9 @@ pub(crate) fn module(ts: TokenStream) -> TokenStream {
 
     let info = ModuleInfo::parse(&mut it);
 
-    let mut modinfo = ModInfoBuilder::new(info.name.as_ref());
+    /* Rust does not allow hyphens in identifiers, use underscore instead */
+    let name_identifier = info.name.replace("-", "_");
+    let mut modinfo = ModInfoBuilder::new(name_identifier.as_ref());
     if let Some(author) = info.author {
         modinfo.emit("author", &author);
     }
@@ -298,14 +300,14 @@ mod __module_init {{
                     #[doc(hidden)]
                     #[link_section = \"{initcall_section}\"]
                     #[used]
-                    pub static __{name}_initcall: extern \"C\" fn() -> kernel::ffi::c_int = __{name}_init;
+                    pub static __{name_identifier}_initcall: extern \"C\" fn() -> kernel::ffi::c_int = __{name_identifier}_init;
 
                     #[cfg(not(MODULE))]
                     #[cfg(CONFIG_HAVE_ARCH_PREL32_RELOCATIONS)]
                     core::arch::global_asm!(
                         r#\".section \"{initcall_section}\", \"a\"
-                        __{name}_initcall:
-                            .long   __{name}_init - .
+                        __{name_identifier}_initcall:
+                            .long   __{name_identifier}_init - .
                             .previous
                         \"#
                     );
@@ -313,7 +315,7 @@ mod __module_init {{
                     #[cfg(not(MODULE))]
                     #[doc(hidden)]
                     #[no_mangle]
-                    pub extern \"C\" fn __{name}_init() -> kernel::ffi::c_int {{
+                    pub extern \"C\" fn __{name_identifier}_init() -> kernel::ffi::c_int {{
                         // SAFETY: This function is inaccessible to the outside due to the double
                         // module wrapping it. It is called exactly once by the C side via its
                         // placement above in the initcall section.
@@ -323,12 +325,12 @@ mod __module_init {{
                     #[cfg(not(MODULE))]
                     #[doc(hidden)]
                     #[no_mangle]
-                    pub extern \"C\" fn __{name}_exit() {{
+                    pub extern \"C\" fn __{name_identifier}_exit() {{
                         // SAFETY:
                         // - This function is inaccessible to the outside due to the double
                         //   module wrapping it. It is called exactly once by the C side via its
                         //   unique name,
-                        // - furthermore it is only called after `__{name}_init` has returned `0`
+                        // - furthermore it is only called after `__{name_identifier}_init` has returned `0`
                         //   (which delegates to `__init`).
                         unsafe {{ __exit() }}
                     }}
@@ -369,6 +371,7 @@ unsafe fn __exit() {{
         ",
         type_ = info.type_,
         name = info.name,
+        name_identifier = name_identifier,
         modinfo = modinfo.buffer,
         initcall_section = ".initcall6.init"
     )
-- 
2.48.1

