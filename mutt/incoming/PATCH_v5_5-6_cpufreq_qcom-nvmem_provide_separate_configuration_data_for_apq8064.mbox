From vireshk  Tue Oct  3 08:55:45 2023
Delivered-To: viresh.kumar@linaro.org
Received: from pop.gmail.com [142.251.175.108] 	by vireshk-i7 with POP3 (fetchmail-6.4.2) 	for <vireshk@localhost> (single-drop); Tue, 03 Oct 2023 08:55:45 +0530 (IST)
Received: by 2002:a05:7208:960b:b0:6d:a1b7:b892 with SMTP id gt11csp1441063rbb;         Mon, 2 Oct 2023 11:59:56 -0700 (PDT)
X-Google-Smtp-Source: AGHT+IH+s34rhnXD+/V6sei0nI6r6JaRpSjtaWDPN/lgL5FDHS5pyP6wCjJaRSlmbCN2vyvJCHF/
X-Received: by 2002:a9d:7c99:0:b0:6b9:cba6:b246 with SMTP id q25-20020a9d7c99000000b006b9cba6b246mr13706050otn.9.1696273196376;         Mon, 02 Oct 2023 11:59:56 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1696273196; cv=none;         d=google.com; s=arc-20160816;         b=w2as6gHuYVytCVwCLnuj3OkqKNbNkC5XloQBKa+PbizLxTodoXDvQijiwQHcQNWU7z          qUUMo4tZZCKFvmMZTMCYYpTEyz+1xAkrfMHdoqu7iZ8SqA102dpuNfWRW/HUxMXYmqac          M46Adu2JhT/4I1VvXSaMWFF1jW8NkiPTf0edZ8PzmqL4xvx/ve6ZIHHjaYZ99L+YO230          4wh194ARFvi2oo1K9OL63RE8s9bDGLD1HGl15yy+7dP98Vy9p8+wntIz5soDottcnync          YFQIhaa/Caul/XSDnyjyEf48LO8ziWloP0qjl789KBVaGhKeLWiIh9glq1cfMRYRS5dK          kOag==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;         h=content-transfer-encoding:mime-version:references:in-reply-to          :message-id:date:subject:cc:to:from:dkim-signature:dmarc-filter          :delivered-to;         bh=2jjTNnguvLOGzQRpp4J4p+5ap6mcEJVkzoAyjCrZDG0=;         fh=fk0xVtUSBSBe5KQKUmBR//55zl86YIXssijK9fd20lU=;         b=fTKLFtXvLJLhLquSyzF1K6TmOeaYRAETQWrcQ+YBkC1PJopdk0OhR2JDRXvsX8eZEg          yL/CYE/cMUZjJ9r3i4masjz4jjJcxD57+zl68fhgVbZDtNJ991foI8/g2mVAda31Db5o          0i+qqzLApZ7eObt9dOcJw+p3ANFQw+qkQsMOWVYV/RQ11x3XBgfcAbzdvPJJRK78KvrM          pNIDr7Z/Ef33QsdU336mH3Rs0TtWlS8t6szb4wffFXOYbWk9RIOFs+ad2J+ADBgHLILu          wE97xj6TjP+OD6lSxWF4i2/14TVcMXzk+ZeOu3hxnay5LW1bb8/cq6jyqqNr4qcx0bKq          Wkjw==
ARC-Authentication-Results: i=1; mx.google.com;        dkim=pass header.i=@linaro.org header.s=google header.b=KqUBuvw5;        spf=pass (google.com: domain of srs0=/w69=fq=linaro.org=dmitry.baryshkov@kernel.org designates 2604:1380:4641:c500::1 as permitted sender) smtp.mailfrom="SRS0=/w69=FQ=linaro.org=dmitry.baryshkov@kernel.org";        dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=linaro.org
Return-Path: <SRS0=/w69=FQ=linaro.org=dmitry.baryshkov@kernel.org>
Received: from dfw.source.kernel.org (dfw.source.kernel.org. [2604:1380:4641:c500::1])         by mx.google.com with ESMTPS id g4-20020a9d6184000000b006bb17ddc5e5si10720544otk.274.2023.10.02.11.59.56         for <viresh.kumar@linaro.org>         (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);         Mon, 02 Oct 2023 11:59:56 -0700 (PDT)
Received-SPF: pass (google.com: domain of srs0=/w69=fq=linaro.org=dmitry.baryshkov@kernel.org designates 2604:1380:4641:c500::1 as permitted sender) client-ip=2604:1380:4641:c500::1;
Authentication-Results: mx.google.com;        dkim=pass header.i=@linaro.org header.s=google header.b=KqUBuvw5;        spf=pass (google.com: domain of srs0=/w69=fq=linaro.org=dmitry.baryshkov@kernel.org designates 2604:1380:4641:c500::1 as permitted sender) smtp.mailfrom="SRS0=/w69=FQ=linaro.org=dmitry.baryshkov@kernel.org";        dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=linaro.org
Received: from smtp.kernel.org (transwarp.subspace.kernel.org [100.75.92.58]) 	by dfw.source.kernel.org (Postfix) with ESMTP id 1316760F80 	for <viresh.kumar@linaro.org>; Mon,  2 Oct 2023 18:59:56 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) 	id C7D77C433C7; Mon,  2 Oct 2023 18:59:55 +0000 (UTC)
Delivered-To: vireshk@kernel.org
Received: from mail-lf1-f50.google.com (mail-lf1-f50.google.com [209.85.167.50]) 	(using TLSv1.3 with cipher TLS_AES_128_GCM_SHA256 (128/128 bits) 	 key-exchange X25519 server-signature RSA-PSS (2048 bits) server-digest SHA256) 	(No client certificate requested) 	by smtp.kernel.org (Postfix) with ESMTPS id D9340C116A3 	for <vireshk@kernel.org>; Mon,  2 Oct 2023 18:59:47 +0000 (UTC)
DMARC-Filter: OpenDMARC Filter v1.4.1 smtp.kernel.org D9340C116A3
Authentication-Results: smtp.kernel.org; dmarc=pass (p=none dis=none) header.from=linaro.org
Authentication-Results: smtp.kernel.org; spf=pass smtp.mailfrom=linaro.org
Received: by mail-lf1-f50.google.com with SMTP id 2adb3069b0e04-5046bf37daeso42232e87.1         for <vireshk@kernel.org>; Mon, 02 Oct 2023 11:59:47 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;         d=linaro.org; s=google; t=1696273185; x=1696877985; darn=kernel.org;         h=content-transfer-encoding:mime-version:references:in-reply-to          :message-id:date:subject:cc:to:from:from:to:cc:subject:date          :message-id:reply-to;         bh=2jjTNnguvLOGzQRpp4J4p+5ap6mcEJVkzoAyjCrZDG0=;         b=KqUBuvw5NLC3WuA4dsFS2I/FgHF6QhJAXKaUjoH64jqCWD8pzQ4CfIavYfnyqSLqJI          Esy4krYzaxACgBkhLKwvOToR5AGezA26b1mI11jy5/2e5LwdmBCRIYBTh93Usv06suSk          Pkovrs3pD66DxZNG7PXkTxnVmS6S13mzUeCpxmeqmwsq9mMvgNM5+EKXMc11dt0QQ+S/          uMSsomfqFVv4S2exmWfK5JQmjiJaCtJZJfZRw647QthqIOH9dTEZ3FHAgPc9tG9RbPeT          DUoHhYkVGwz+pnl4W0SG5yfGsoZOOv/QL2nqfrFdxvSchAG7nfOpM5TeYB2SVDbbvzHd          SODA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;         d=1e100.net; s=20230601; t=1696273185; x=1696877985;         h=content-transfer-encoding:mime-version:references:in-reply-to          :message-id:date:subject:cc:to:from:x-gm-message-state:from:to:cc          :subject:date:message-id:reply-to;         bh=2jjTNnguvLOGzQRpp4J4p+5ap6mcEJVkzoAyjCrZDG0=;         b=vD3NTT1w5A0NknZN87ljMG9CwOfm1fD5gCqjy2MDzoU/VoGhhIXZ5fDU1xeqtbSbmZ          XmXSM6J2bTWUVIjQCH+oMDFyBvnoiRX7+r/Qt+WkdHH/dI3y9hHYXu6wPSWgN1o+1u/o          WKH3Vr2mq1QpmKhuuBiCYiuak0SIhcJdgdt3DBYGoKm5QGxoG0pRRdcX4j6dKlzJjbXU          XOVB++eKK/m0WmOZUovlDmIdemqD1+Neaah3BnSz2xrsYp/Cx7XF2US8LLafwmv8xfAS          GIwwpEMxpcRZ/phAAM69/2ScE0ucn0qAWPr4goWiVfsfdO6H7JIqoCqm+2YqwQxHL5pt          mxoQ==
X-Gm-Message-State: AOJu0YyVVx49hvSwfU58ixGtQvo5kho1OtVBswUEnwK9C7TLLYEY1DeO 	ANN5nllQ7C7tHSEC79pghQQ/JA==
X-Received: by 2002:a05:6512:acb:b0:502:d743:9fc4 with SMTP id n11-20020a0565120acb00b00502d7439fc4mr14105432lfu.37.1696273185145;         Mon, 02 Oct 2023 11:59:45 -0700 (PDT)
Received: from umbar.unikie.fi ([192.130.178.91])         by smtp.gmail.com with ESMTPSA id t6-20020a19ad06000000b00502d7365e8fsm2443981lfc.137.2023.10.02.11.59.44         (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);         Mon, 02 Oct 2023 11:59:44 -0700 (PDT)
From: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
To: Rob Herring <robh+dt@kernel.org>, 	Krzysztof Kozlowski <krzysztof.kozlowski+dt@linaro.org>, 	Conor Dooley <conor+dt@kernel.org>, 	Andy Gross <agross@kernel.org>, 	Bjorn Andersson <andersson@kernel.org>, 	Konrad Dybcio <konrad.dybcio@linaro.org>, 	Ilia Lin <ilia.lin@kernel.org>, 	Viresh Kumar <vireshk@kernel.org>, 	Nishanth Menon <nm@ti.com>, 	Stephen Boyd <sboyd@kernel.org>, 	Michael Turquette <mturquette@baylibre.com>, 	"Rafael J. Wysocki" <rafael@kernel.org>, 	Georgi Djakov <djakov@kernel.org>
Cc: linux-arm-msm@vger.kernel.org, 	devicetree@vger.kernel.org, 	linux-pm@vger.kernel.org, 	linux-clk@vger.kernel.org, 	Christian Marangi <ansuelsmth@gmail.com>, 	Stephan Gerhold <stephan@gerhold.net>
Subject: [PATCH v5 5/6] cpufreq: qcom-nvmem: provide separate configuration data for apq8064
Date: Mon,  2 Oct 2023 21:59:39 +0300
Message-Id: <20231002185940.1271800-6-dmitry.baryshkov@linaro.org>
X-Mailer: git-send-email 2.39.2
In-Reply-To: <20231002185940.1271800-1-dmitry.baryshkov@linaro.org>
References: <20231002185940.1271800-1-dmitry.baryshkov@linaro.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Status: RO
Content-Length: 3364
Lines: 106

APQ8064 can scale core voltage according to the frequency needs. Rather
than reusing the A/B format multiplexer, use a simple fuse parsing
function and configure required regulator.

Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
---
 drivers/cpufreq/qcom-cpufreq-nvmem.c | 49 ++++++++++++++++++++++++++--
 1 file changed, 47 insertions(+), 2 deletions(-)

diff --git a/drivers/cpufreq/qcom-cpufreq-nvmem.c b/drivers/cpufreq/qcom-cpufreq-nvmem.c
index e5c17d9f5a24..e1cf677b0c6f 100644
--- a/drivers/cpufreq/qcom-cpufreq-nvmem.c
+++ b/drivers/cpufreq/qcom-cpufreq-nvmem.c
@@ -26,6 +26,7 @@
 #include <linux/platform_device.h>
 #include <linux/pm_domain.h>
 #include <linux/pm_opp.h>
+#include <linux/regulator/consumer.h>
 #include <linux/slab.h>
 #include <linux/soc/qcom/smem.h>
 
@@ -39,6 +40,7 @@ struct qcom_cpufreq_match_data {
 			   char **pvs_name,
 			   struct qcom_cpufreq_drv *drv);
 	const char **genpd_names;
+	const char * const *regulator_names;
 };
 
 struct qcom_cpufreq_drv {
@@ -203,6 +205,34 @@ static int qcom_cpufreq_krait_name_version(struct device *cpu_dev,
 	return ret;
 }
 
+static int qcom_cpufreq_apq8064_name_version(struct device *cpu_dev,
+					     struct nvmem_cell *speedbin_nvmem,
+					     char **pvs_name,
+					     struct qcom_cpufreq_drv *drv)
+{
+	int speed = 0, pvs = 0;
+	u8 *speedbin;
+	size_t len;
+
+	speedbin = nvmem_cell_read(speedbin_nvmem, &len);
+	if (IS_ERR(speedbin))
+		return PTR_ERR(speedbin);
+
+	if (len != 4)
+		return -EINVAL;
+
+	get_krait_bin_format_a(cpu_dev, &speed, &pvs, speedbin);
+
+	snprintf(*pvs_name, sizeof("speedXX-pvsXX"), "speed%d-pvs%d",
+		 speed, pvs);
+
+	drv->versions = (1 << speed);
+
+	kfree(speedbin);
+
+	return 0;
+}
+
 static const struct qcom_cpufreq_match_data match_data_kryo = {
 	.get_version = qcom_cpufreq_kryo_name_version,
 };
@@ -217,6 +247,16 @@ static const struct qcom_cpufreq_match_data match_data_qcs404 = {
 	.genpd_names = qcs404_genpd_names,
 };
 
+static const char * apq8064_regulator_names[] = {
+	"vdd-core",
+	NULL
+};
+
+static const struct qcom_cpufreq_match_data match_data_apq8064 = {
+	.get_version = qcom_cpufreq_apq8064_name_version,
+	.regulator_names = apq8064_regulator_names,
+};
+
 static int qcom_cpufreq_probe(struct platform_device *pdev)
 {
 	struct qcom_cpufreq_drv *drv;
@@ -304,7 +344,12 @@ static int qcom_cpufreq_probe(struct platform_device *pdev)
 			config.virt_devs = NULL;
 		}
 
-		if (config.supported_hw || config.genpd_names) {
+		if (drv->data->regulator_names)
+			config.regulator_names = drv->data->regulator_names;
+
+		if (config.supported_hw ||
+		    config.genpd_names ||
+		    config.regulator_names) {
 			drv->opp_tokens[cpu] = dev_pm_opp_set_config(cpu_dev, &config);
 			if (drv->opp_tokens[cpu] < 0) {
 				ret = drv->opp_tokens[cpu];
@@ -361,7 +406,7 @@ static const struct of_device_id qcom_cpufreq_match_list[] __initconst = {
 	{ .compatible = "qcom,msm8996", .data = &match_data_kryo },
 	{ .compatible = "qcom,qcs404", .data = &match_data_qcs404 },
 	{ .compatible = "qcom,ipq8064", .data = &match_data_krait },
-	{ .compatible = "qcom,apq8064", .data = &match_data_krait },
+	{ .compatible = "qcom,apq8064", .data = &match_data_apq8064 },
 	{ .compatible = "qcom,msm8974", .data = &match_data_krait },
 	{ .compatible = "qcom,msm8960", .data = &match_data_krait },
 	{},
-- 
2.39.2

