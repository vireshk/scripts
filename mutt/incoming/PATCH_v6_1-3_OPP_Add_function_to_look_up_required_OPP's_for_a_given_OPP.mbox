From vireshk  Thu Feb  4 13:45:31 2021
Delivered-To: viresh.kumar@linaro.org
Received: from pop.gmail.com [74.125.68.109] 	by vireshk-i7 with POP3 (fetchmail-6.3.26) 	for <vireshk@localhost> (single-drop); Thu, 04 Feb 2021 13:45:31 +0530 (IST)
Received: by 2002:a5d:9459:0:0:0:0:0 with SMTP id x25csp1121461ior;         Thu, 4 Feb 2021 00:14:33 -0800 (PST)
X-Google-Smtp-Source: ABdhPJzIZTh6Rdd23prIxChod9si7Ogk0Hw9r34qN+WpB/5+OUVtMH2ETnhZNgK9zPj9sCkDyamG
X-Received: by 2002:a63:cf06:: with SMTP id j6mr7770667pgg.195.1612426473057;         Thu, 04 Feb 2021 00:14:33 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1612426473; cv=none;         d=google.com; s=arc-20160816;         b=wss9lYVbzqCJ6uFqHscvzJ4DNo0p09lyz2GLPYEEWTniCe+Idom4TZcS5YYm59iMXx          Yq7If8vyISdcoJS1LVsO3g20GbL2pxjVbGtW4UiL1LjB66PyvC7dbp9MPSs3KMC99b3e          gjPYp692ajbbIqXeIQn2x3pU6ckdRFG9C6mv66DrDdLyYwL/IxCAlmK4unBlhgKwbIsA          gnwCYUc2kjbMtuAoBhgouyQn4pa+wVZn28/GT/wwAdbqdKxm/JsTSNM23q2GPGWUln4x          1xQI2OmflrcVmrSsrNIg+aNY+bLc8nhYbpOblBi005fYksbA8t2UgDsOd+pKUjcOSToR          GZSg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;         h=content-transfer-encoding:mime-version:references:in-reply-to          :message-id:date:subject:cc:to:from:dkim-signature:dmarc-filter          :delivered-to;         bh=x5CYaMWQw/4Wx6VXz67FQpkoWBucz0YJ72zvXGes1Ck=;         b=WxdYlfqIpMS3sFrn8GOSRl/SUK8tzFrGdBDaJQMv+PD6CYVOVYbBoxKeXavPY2SMns          /zAkBTTIXZ70ajx9SCCr8/DEucGIQ8zYHSGONqgsDC2MQl4oGHsfA8ey2gwiuWrblmWE          Qp2NW592FaQeo4jju0PVeyNaoaCZT4xKhZYFOpyNueirpuWgL0xsxQ7/FIgKYANa75Uu          1AGOO1bzPqMj+qZ6rYn5z6ms4cPvwKHlPMAnR21gj1taWuYtrJ0bg0cEeIoCEGgLW8qZ          f+aY1Icgl5ZM5AHtKoa84vt+fUKcG7SaRaS40xR35D9RDiT6ObNLp+/HAd8pdqwYJWmu          wZeg==
ARC-Authentication-Results: i=1; mx.google.com;        dkim=pass header.i=@chromium.org header.s=google header.b=QZvelL5k;        spf=pass (google.com: domain of srs0=xsga=hg=chromium.org=hsinyi@kernel.org designates 198.145.29.99 as permitted sender) smtp.mailfrom="SRS0=Xsga=HG=chromium.org=hsinyi@kernel.org";        dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=chromium.org
Return-Path: <SRS0=Xsga=HG=chromium.org=hsinyi@kernel.org>
Received: from mail.kernel.org (mail.kernel.org. [198.145.29.99])         by mx.google.com with ESMTPS id w17si5153196pfj.337.2021.02.04.00.14.32         for <viresh.kumar@linaro.org>         (version=TLS1_2 cipher=ECDHE-ECDSA-AES128-GCM-SHA256 bits=128/128);         Thu, 04 Feb 2021 00:14:33 -0800 (PST)
Received-SPF: pass (google.com: domain of srs0=xsga=hg=chromium.org=hsinyi@kernel.org designates 198.145.29.99 as permitted sender) client-ip=198.145.29.99;
Authentication-Results: mx.google.com;        dkim=pass header.i=@chromium.org header.s=google header.b=QZvelL5k;        spf=pass (google.com: domain of srs0=xsga=hg=chromium.org=hsinyi@kernel.org designates 198.145.29.99 as permitted sender) smtp.mailfrom="SRS0=Xsga=HG=chromium.org=hsinyi@kernel.org";        dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=chromium.org
Received: by mail.kernel.org (Postfix) 	id B0CBD64F59; Thu,  4 Feb 2021 08:14:32 +0000 (UTC)
Delivered-To: vireshk@kernel.org
Received: from mail-pj1-f53.google.com (mail-pj1-f53.google.com [209.85.216.53]) 	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits)) 	(No client certificate requested) 	by mail.kernel.org (Postfix) with ESMTPS id 67FCE64F55 	for <vireshk@kernel.org>; Thu,  4 Feb 2021 08:14:32 +0000 (UTC)
DMARC-Filter: OpenDMARC Filter v1.3.2 mail.kernel.org 67FCE64F55
Authentication-Results: mail.kernel.org; dmarc=pass (p=none dis=none) header.from=chromium.org
Authentication-Results: mail.kernel.org; spf=pass smtp.mailfrom=hsinyi@chromium.org
Received: by mail-pj1-f53.google.com with SMTP id z9so1332714pjl.5         for <vireshk@kernel.org>; Thu, 04 Feb 2021 00:14:32 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;         d=chromium.org; s=google;         h=from:to:cc:subject:date:message-id:in-reply-to:references          :mime-version:content-transfer-encoding;         bh=x5CYaMWQw/4Wx6VXz67FQpkoWBucz0YJ72zvXGes1Ck=;         b=QZvelL5k11SF4Dg/A6++a6KsE/vSckTzOkNENbQWJCmUC4yyMS/Mb6rz/WKA32rxjc          cGnd7sDUuvE+F/qbVYvFQqoRzxsWNQeagz56NbQnnFecUqBdKwcIRfBzgtOn9bz35R3z          +AosgC/5C0oTMMyk052i2IqSqShkwb4b6Q+JM=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;         d=1e100.net; s=20161025;         h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to          :references:mime-version:content-transfer-encoding;         bh=x5CYaMWQw/4Wx6VXz67FQpkoWBucz0YJ72zvXGes1Ck=;         b=NKxUj2xhtcB/gEK1X9vu1Em1tQpFtCjmT60oHzk11eotE62MQtpzKRNR447yqC8EPS          PzqlNsN/fnIWWoTdO+9Rw1yfTaglZ1d//DVa4tk0EtW8fKvWeIc5sIerd5RpbRCRfB2d          6tMOTyEKfxN+oWbFNN9qU6YqXRlPjG/0JYDXaYuvIKsVip/w9OU4PeDiDRARw1jY0Yuy          glF5rQcELTsuipf5cv73RRQL7d1KELjDevANO/Fvzz8pEA8dH8nIYrqLnGzms/dDdYUE          Iv+P+oBbRoGEvxmSSq07GUz2lQPfbuYosO0vnxumS5bonF5f3+EPb6krR0RY/GsRzg91          uLoA==
X-Gm-Message-State: AOAM530i7QFL4yBs4IF/R+PXUWYSHGbZO1uXq2vDFGRXs6AM8PQOZBxi 	5tS6Y3cwd4xjpmRdTjmYcVMscR9IoqhUWg==
X-Received: by 2002:a17:902:d2c1:b029:de:7c38:f86a with SMTP id n1-20020a170902d2c1b02900de7c38f86amr7102021plc.83.1612426471523;         Thu, 04 Feb 2021 00:14:31 -0800 (PST)
Received: from hsinyi-z840.tpe.corp.google.com ([2401:fa00:1:10:ed70:6d43:9c6a:2e22])         by smtp.gmail.com with ESMTPSA id e3sm5091258pgs.60.2021.02.04.00.14.29         (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);         Thu, 04 Feb 2021 00:14:31 -0800 (PST)
From: Hsin-Yi Wang <hsinyi@chromium.org>
To: Viresh Kumar <vireshk@kernel.org>, 	linux-pm@vger.kernel.org
Cc: Nishanth Menon <nm@ti.com>, 	Stephen Boyd <sboyd@kernel.org>, 	"Rafael J . Wysocki" <rjw@rjwysocki.net>, 	linux-kernel@vger.kernel.org, 	MyungJoo Ham <myungjoo.ham@samsung.com>, 	Kyungmin Park <kyungmin.park@samsung.com>, 	Chanwoo Choi <cw00.choi@samsung.com>, 	Saravana Kannan <saravanak@google.com>
Subject: [PATCH v6 1/3] OPP: Add function to look up required OPP's for a given OPP
Date: Thu,  4 Feb 2021 16:14:22 +0800
Message-Id: <20210204081424.2219311-2-hsinyi@chromium.org>
X-Mailer: git-send-email 2.30.0.365.g02bc693789-goog
In-Reply-To: <20210204081424.2219311-1-hsinyi@chromium.org>
References: <20210204081424.2219311-1-hsinyi@chromium.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

From: Saravana Kannan <saravanak@google.com>

Add a function that allows looking up required OPPs given a source OPP
table, destination OPP table and the source OPP.

Signed-off-by: Saravana Kannan <saravanak@google.com>
Signed-off-by: Hsin-Yi Wang <hsinyi@chromium.org>
---
 drivers/opp/core.c     | 59 ++++++++++++++++++++++++++++++++++++++++++
 include/linux/pm_opp.h |  7 +++++
 2 files changed, 66 insertions(+)

diff --git a/drivers/opp/core.c b/drivers/opp/core.c
index dc95d29e94c1b..fba67ae40aefc 100644
--- a/drivers/opp/core.c
+++ b/drivers/opp/core.c
@@ -2398,6 +2398,65 @@ devm_pm_opp_attach_genpd(struct device *dev, const char **names,
 }
 EXPORT_SYMBOL_GPL(devm_pm_opp_attach_genpd);
 
+/**
+ * dev_pm_opp_xlate_required_opp() - Find required OPP for @src_table OPP.
+ * @src_table: OPP table which has @dst_table as one of its required OPP table.
+ * @dst_table: Required OPP table of the @src_table.
+ *
+ * This function returns the OPP (present in @dst_table) pointed out by the
+ * "required-opps" property of the OPP (present in @src_table).
+ *
+ * The callers are required to call dev_pm_opp_put() for the returned OPP after
+ * use.
+ *
+ * Return: destination table OPP on success, otherwise -EINVAL or -ENODEV based
+ * on errors.
+ */
+struct dev_pm_opp *dev_pm_opp_xlate_required_opp(struct opp_table *src_table,
+						 struct opp_table *dst_table,
+						 struct dev_pm_opp *src_opp)
+{
+	struct dev_pm_opp *opp, *dest_opp = ERR_PTR(-EINVAL);
+	int i;
+
+	if (!src_table || !dst_table || !src_opp ||
+	    !src_table->required_opp_tables)
+		return ERR_PTR(-EINVAL);
+
+	/* required-opps not fully initialized yet */
+	if (lazy_linking_pending(src_table))
+		return ERR_PTR(-EINVAL);
+
+	for (i = 0; i < src_table->required_opp_count; i++) {
+		if (src_table->required_opp_tables[i] == dst_table)
+			break;
+	}
+
+	if (unlikely(i == src_table->required_opp_count)) {
+		pr_err("%s: Couldn't find matching OPP table (%p: %p)\n",
+		       __func__, src_table, dst_table);
+		return ERR_PTR(-ENODEV);
+	}
+
+	mutex_lock(&src_table->lock);
+
+	list_for_each_entry(opp, &src_table->opp_list, node) {
+		if (opp == src_opp) {
+			dest_opp = opp->required_opps[i];
+			dev_pm_opp_get(dest_opp);
+			goto unlock;
+		}
+	}
+
+	pr_err("%s: Couldn't find matching OPP (%p: %p)\n", __func__, src_table,
+	       dst_table);
+
+unlock:
+	mutex_unlock(&src_table->lock);
+
+	return dest_opp;
+}
+
 /**
  * dev_pm_opp_xlate_performance_state() - Find required OPP's pstate for src_table.
  * @src_table: OPP table which has dst_table as one of its required OPP table.
diff --git a/include/linux/pm_opp.h b/include/linux/pm_opp.h
index ab1d15ce559db..c0371efa4a0f2 100644
--- a/include/linux/pm_opp.h
+++ b/include/linux/pm_opp.h
@@ -156,6 +156,7 @@ struct opp_table *devm_pm_opp_register_set_opp_helper(struct device *dev, int (*
 struct opp_table *dev_pm_opp_attach_genpd(struct device *dev, const char **names, struct device ***virt_devs);
 void dev_pm_opp_detach_genpd(struct opp_table *opp_table);
 struct opp_table *devm_pm_opp_attach_genpd(struct device *dev, const char **names, struct device ***virt_devs);
+struct dev_pm_opp *dev_pm_opp_xlate_required_opp(struct opp_table *src_table, struct opp_table *dst_table, struct dev_pm_opp *src_opp);
 int dev_pm_opp_xlate_performance_state(struct opp_table *src_table, struct opp_table *dst_table, unsigned int pstate);
 int dev_pm_opp_set_rate(struct device *dev, unsigned long target_freq);
 int dev_pm_opp_set_opp(struct device *dev, struct dev_pm_opp *opp);
@@ -367,6 +368,12 @@ static inline struct opp_table *devm_pm_opp_attach_genpd(struct device *dev,
 	return ERR_PTR(-EOPNOTSUPP);
 }
 
+static inline struct dev_pm_opp *dev_pm_opp_xlate_required_opp(struct opp_table *src_table,
+				struct opp_table *dst_table, struct dev_pm_opp *src_opp)
+{
+	return ERR_PTR(-EOPNOTSUPP);
+}
+
 static inline int dev_pm_opp_xlate_performance_state(struct opp_table *src_table, struct opp_table *dst_table, unsigned int pstate)
 {
 	return -EOPNOTSUPP;
-- 
2.30.0.365.g02bc693789-goog

