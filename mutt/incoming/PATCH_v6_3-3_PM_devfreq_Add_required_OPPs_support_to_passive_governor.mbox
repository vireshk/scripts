From vireshk  Thu Feb  4 13:45:33 2021
Delivered-To: viresh.kumar@linaro.org
Received: from pop.gmail.com [74.125.68.109] 	by vireshk-i7 with POP3 (fetchmail-6.3.26) 	for <vireshk@localhost> (single-drop); Thu, 04 Feb 2021 13:45:33 +0530 (IST)
Received: by 2002:a5d:9459:0:0:0:0:0 with SMTP id x25csp1121507ior;         Thu, 4 Feb 2021 00:14:37 -0800 (PST)
X-Google-Smtp-Source: ABdhPJzSWTVD1PIRKge3cWI1ixQv8G/EKEf6mDNM3RfU1e1k+rx2GG+Y6Jjq1C7JJzvnQWkqm75x
X-Received: by 2002:a17:90a:178e:: with SMTP id q14mr7377650pja.71.1612426477598;         Thu, 04 Feb 2021 00:14:37 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1612426477; cv=none;         d=google.com; s=arc-20160816;         b=f8mqjGs6fvVneiZxkRBnCSOA52g715aZv0I8X/fuqKU4tFZ3V0E1GO8fIOuX7NQjd7          PnXGKj6Jv+x/c3C3vH5rOVjkDyZEJOsnJudrGxBwtEIPRW9pVJT1FFBBS334f848MOtV          fW2yAxEsbvXc1225LEHYGm4LzAR6cFE2Znlof/ylnVxiGi1YH4We288lcWFLjA0JbF79          3pdZi5Fhr6cbTypb/3VrEbM2vfCCDcQHiLU6m1qoUSsOLfeP1GFjZhuB/DPZ86caRXt4          HhH+M8/JF7OM9Kc6izgHI/FnN77xvIqjtlPXLM17Rdg9eZolgPNXMGyVmR2/ahha1wa4          gWaA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;         h=content-transfer-encoding:mime-version:references:in-reply-to          :message-id:date:subject:cc:to:from:dkim-signature:dmarc-filter          :delivered-to;         bh=x7hwBm1kKlbRCUXjrjQz7CyPjQNfq9+xKEIyZstLmMQ=;         b=S8sZd84bA0kwZWw+9lRy98FYxW9U+aIY00IJ29C1rnFANypKiH6SgCiACgONVcjk/5          ElQxg69cUJBZsxBCWVQJ7qPPM6ZgCf+ON2i7g4OLxWbHpE/EjuX9DQUg2YbDeWtJXW3Q          dECbFDamRzIeSHQm8qEu5lnIgO807kfY0Y0FhLaFOkADJxAVahGNPXtR5odGQVXOmK2V          hXCoAHNwgKmvZ8av0ZAleqbXunhsk4JnaVWFmKsatN8P+z6IyDPITQBNQeuEp+Lm/+Ri          qkaYRlC8TMZ4w0xoVXJOCoqZ/sGUos7A5Vb2KIwXwx6QjaTMw3Zf3NnGP8ywBve8SJ5H          munA==
ARC-Authentication-Results: i=1; mx.google.com;        dkim=pass header.i=@chromium.org header.s=google header.b=oXRtwD8S;        spf=pass (google.com: domain of srs0=xsga=hg=chromium.org=hsinyi@kernel.org designates 198.145.29.99 as permitted sender) smtp.mailfrom="SRS0=Xsga=HG=chromium.org=hsinyi@kernel.org";        dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=chromium.org
Return-Path: <SRS0=Xsga=HG=chromium.org=hsinyi@kernel.org>
Received: from mail.kernel.org (mail.kernel.org. [198.145.29.99])         by mx.google.com with ESMTPS id q17si5564211plr.250.2021.02.04.00.14.37         for <viresh.kumar@linaro.org>         (version=TLS1_2 cipher=ECDHE-ECDSA-AES128-GCM-SHA256 bits=128/128);         Thu, 04 Feb 2021 00:14:37 -0800 (PST)
Received-SPF: pass (google.com: domain of srs0=xsga=hg=chromium.org=hsinyi@kernel.org designates 198.145.29.99 as permitted sender) client-ip=198.145.29.99;
Authentication-Results: mx.google.com;        dkim=pass header.i=@chromium.org header.s=google header.b=oXRtwD8S;        spf=pass (google.com: domain of srs0=xsga=hg=chromium.org=hsinyi@kernel.org designates 198.145.29.99 as permitted sender) smtp.mailfrom="SRS0=Xsga=HG=chromium.org=hsinyi@kernel.org";        dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=chromium.org
Received: by mail.kernel.org (Postfix) 	id 46E0564F4D; Thu,  4 Feb 2021 08:14:37 +0000 (UTC)
Delivered-To: vireshk@kernel.org
Received: from mail-pj1-f52.google.com (mail-pj1-f52.google.com [209.85.216.52]) 	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits)) 	(No client certificate requested) 	by mail.kernel.org (Postfix) with ESMTPS id 0AE7264F59 	for <vireshk@kernel.org>; Thu,  4 Feb 2021 08:14:36 +0000 (UTC)
DMARC-Filter: OpenDMARC Filter v1.3.2 mail.kernel.org 0AE7264F59
Authentication-Results: mail.kernel.org; dmarc=pass (p=none dis=none) header.from=chromium.org
Authentication-Results: mail.kernel.org; spf=pass smtp.mailfrom=hsinyi@chromium.org
Received: by mail-pj1-f52.google.com with SMTP id nm1so1267093pjb.3         for <vireshk@kernel.org>; Thu, 04 Feb 2021 00:14:36 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;         d=chromium.org; s=google;         h=from:to:cc:subject:date:message-id:in-reply-to:references          :mime-version:content-transfer-encoding;         bh=x7hwBm1kKlbRCUXjrjQz7CyPjQNfq9+xKEIyZstLmMQ=;         b=oXRtwD8S3IU7qmYkvuuwuGjjF13/SrDBBFsIC6RDA0gMdOXw2QlM6hRE3SJZ6mFLSv          KomcMdg4+2/7ctxnxSPcDtRdN2BKk7mkig3dr04m8kr9u/wvPbYYjwJJK4Vah3PODknL          z3Cp83gtMyMIbB+iJdtMRV2t2pH8SNBKpsrE4=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;         d=1e100.net; s=20161025;         h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to          :references:mime-version:content-transfer-encoding;         bh=x7hwBm1kKlbRCUXjrjQz7CyPjQNfq9+xKEIyZstLmMQ=;         b=RDMUhs0xq83+pGg0YsaxHHYdL16IMQwEFaXMlgcDqLK/xxNze+ulyObarxQpU9yK5E          OdX5Mz55NKVFjgfD+UTKh+TMlMKZiG+cj50hVj89LjNMrDGfV26QfGHln051vmhnLuhu          Fk6Un8ujzsaW9Ql7oXlJX2ygacIlflt1I+9+q+PND9krymPlUk9ANzqxC+ewsZfHWi9h          AkKh/DDF6EdvFjTKiVlMSsLzN3sR/lhY/kgNuqYOMHSIHtPYY5i8qxX47KtemaAEAVNf          QBtuIk5vLh2rLhxIR7qzrn6yZkgC8jXHAeV4PBZAeVs1emXByN2WT+GVMWJu5xlT8B2F          P/zA==
X-Gm-Message-State: AOAM530qKLmwCLlpDjlmzDKZl8i6ZY2u9OyV6QAZNRkqpUguk4YudEgz 	IJpFjhSmuPygV5wjTN3fimPUp1B3lhbg1w==
X-Received: by 2002:a17:90a:701:: with SMTP id l1mr7313673pjl.154.1612426475966;         Thu, 04 Feb 2021 00:14:35 -0800 (PST)
Received: from hsinyi-z840.tpe.corp.google.com ([2401:fa00:1:10:ed70:6d43:9c6a:2e22])         by smtp.gmail.com with ESMTPSA id e3sm5091258pgs.60.2021.02.04.00.14.33         (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);         Thu, 04 Feb 2021 00:14:35 -0800 (PST)
From: Hsin-Yi Wang <hsinyi@chromium.org>
To: Viresh Kumar <vireshk@kernel.org>, 	linux-pm@vger.kernel.org
Cc: Nishanth Menon <nm@ti.com>, 	Stephen Boyd <sboyd@kernel.org>, 	"Rafael J . Wysocki" <rjw@rjwysocki.net>, 	linux-kernel@vger.kernel.org, 	MyungJoo Ham <myungjoo.ham@samsung.com>, 	Kyungmin Park <kyungmin.park@samsung.com>, 	Chanwoo Choi <cw00.choi@samsung.com>, 	Saravana Kannan <saravanak@google.com>
Subject: [PATCH v6 3/3] PM / devfreq: Add required OPPs support to passive governor
Date: Thu,  4 Feb 2021 16:14:24 +0800
Message-Id: <20210204081424.2219311-4-hsinyi@chromium.org>
X-Mailer: git-send-email 2.30.0.365.g02bc693789-goog
In-Reply-To: <20210204081424.2219311-1-hsinyi@chromium.org>
References: <20210204081424.2219311-1-hsinyi@chromium.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

From: Saravana Kannan <saravanak@google.com>

Look at the required OPPs of the "parent" device to determine the OPP that
is required from the slave device managed by the passive governor. This
allows having mappings between a parent device and a slave device even when
they don't have the same number of OPPs.

Signed-off-by: Saravana Kannan <saravanak@google.com>
Acked-by: MyungJoo Ham <myungjoo.ham@samsung.com>
Acked-by: Chanwoo Choi <cw00.choi@samsung.com>
Signed-off-by: Hsin-Yi Wang <hsinyi@chromium.org>
---
 drivers/devfreq/governor_passive.c | 25 ++++++++++++++++++-------
 1 file changed, 18 insertions(+), 7 deletions(-)

diff --git a/drivers/devfreq/governor_passive.c b/drivers/devfreq/governor_passive.c
index 63332e4a65ae8..8fd51cc9b991a 100644
--- a/drivers/devfreq/governor_passive.c
+++ b/drivers/devfreq/governor_passive.c
@@ -19,7 +19,7 @@ static int devfreq_passive_get_target_freq(struct devfreq *devfreq,
 			= (struct devfreq_passive_data *)devfreq->data;
 	struct devfreq *parent_devfreq = (struct devfreq *)p_data->parent;
 	unsigned long child_freq = ULONG_MAX;
-	struct dev_pm_opp *opp;
+	struct dev_pm_opp *opp, *p_opp = ERR_PTR(-ENODEV);
 	int i, count, ret = 0;
 
 	/*
@@ -29,7 +29,7 @@ static int devfreq_passive_get_target_freq(struct devfreq *devfreq,
 	 */
 	if (p_data->get_target_freq) {
 		ret = p_data->get_target_freq(devfreq, freq);
-		goto out;
+		return ret;
 	}
 
 	/*
@@ -56,13 +56,22 @@ static int devfreq_passive_get_target_freq(struct devfreq *devfreq,
 	 * list of parent device. Because in this case, *freq is temporary
 	 * value which is decided by ondemand governor.
 	 */
-	opp = devfreq_recommended_opp(parent_devfreq->dev.parent, freq, 0);
-	if (IS_ERR(opp)) {
-		ret = PTR_ERR(opp);
-		goto out;
+	p_opp = devfreq_recommended_opp(parent_devfreq->dev.parent, freq, 0);
+	if (IS_ERR(p_opp)) {
+		ret = PTR_ERR(p_opp);
+		return ret;
 	}
 
-	dev_pm_opp_put(opp);
+	if (devfreq->opp_table && parent_devfreq->opp_table) {
+		opp = dev_pm_opp_xlate_required_opp(parent_devfreq->opp_table,
+						    devfreq->opp_table, p_opp);
+		if (!IS_ERR(opp)) {
+			*freq = dev_pm_opp_get_freq(opp);
+			dev_pm_opp_put(opp);
+		} else
+			ret = PTR_ERR(opp);
+		goto out;
+	}
 
 	/*
 	 * Get the OPP table's index of decided freqeuncy by governor
@@ -89,6 +98,8 @@ static int devfreq_passive_get_target_freq(struct devfreq *devfreq,
 	*freq = child_freq;
 
 out:
+	dev_pm_opp_put(p_opp);
+
 	return ret;
 }
 
-- 
2.30.0.365.g02bc693789-goog

