From vireshk  Fri Dec  2 14:30:56 2016
Bcc: viresh.kumar@linaro.org
Return-Path: <viresh.kumar@linaro.org>
Received: from gmail-pop.l.google.com [74.125.200.108] 	by vireshk-i7 with POP3 (fetchmail-6.3.26) 	for <vireshk@localhost> (single-drop); Fri, 02 Dec 2016 14:30:56 +0530 (IST)
Received: from localhost ([122.172.43.83])         by smtp.gmail.com with ESMTPSA id b71sm5803147pfj.62.2016.12.02.01.00.50         (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);         Fri, 02 Dec 2016 01:00:50 -0800 (PST)
Date: Fri, 2 Dec 2016 14:30:47 +0530
From: Viresh Kumar <viresh.kumar@linaro.org>
To: Chanwoo Choi <cw00.choi@samsung.com>
Cc: Rafael Wysocki <rjw@rjwysocki.net>, 	MyungJoo Ham <myungjoo.ham@samsung.com>, 	Kyungmin Park <kyungmin.park@samsung.com>, 	linaro-kernel@lists.linaro.org, linux-pm@vger.kernel.org, 	Stephen Boyd <sboyd@codeaurora.org>, nm@ti.com, 	Vincent Guittot <vincent.guittot@linaro.org>
Subject: Re: [PATCH] devfreq: rk3399_dmc: Don't use OPP structures outside of  RCU locks
Message-ID: <20161202090047.GA22049@vireshk-i7>
References: <CGME20161201103813epcas4p116430ac17cea842a7f09b35f0969ccb0@epcas4p1.samsung.com>  <22bf6dfc155a6a241c2ee4e2b44a615d0e82064d.1480588658.git.viresh.kumar@linaro.org>  <584133F9.4080006@samsung.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <584133F9.4080006@samsung.com>
User-Agent: Mutt/1.5.24 (2015-08-30)
Status: RO
Content-Length: 2871
Lines: 95

Hi Chanwoo,

Thanks for trying to review all these patches.

On 02-12-16, 17:42, Chanwoo Choi wrote:
> Hi Viresh,
> 
> On 2016년 12월 01일 19:38, Viresh Kumar wrote:
> > The OPP structures are abused to the best here, without understanding
> > how the OPP core and RCU locks work.
> > 
> > In short, the OPP pointer saved in 'rk3399_dmcfreq' can become invalid
> > under your nose, as the OPP core may free it.
> > 
> > Fix various abuses around OPP structures and calls.
> > 
> > Compile tested only.
> > 
> > Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
> > ---
> > I would like it to go via the PM tree. Perhaps that's already the
> > default tree for this.
> > 
> >  drivers/devfreq/rk3399_dmc.c | 11 +++++------
> >  1 file changed, 5 insertions(+), 6 deletions(-)
> > 
> > diff --git a/drivers/devfreq/rk3399_dmc.c b/drivers/devfreq/rk3399_dmc.c
> > index 5063ac1a5939..cf14631b1945 100644
> > --- a/drivers/devfreq/rk3399_dmc.c
> > +++ b/drivers/devfreq/rk3399_dmc.c
> > @@ -80,7 +80,6 @@ struct rk3399_dmcfreq {
> >  	struct regulator *vdd_center;
> >  	unsigned long rate, target_rate;
> >  	unsigned long volt, target_volt;
> > -	struct dev_pm_opp *curr_opp;
> >  };
> >  
> >  static int rk3399_dmcfreq_target(struct device *dev, unsigned long *freq,
> > @@ -102,9 +101,6 @@ static int rk3399_dmcfreq_target(struct device *dev, unsigned long *freq,
> >  	target_rate = dev_pm_opp_get_freq(opp);
> >  	target_volt = dev_pm_opp_get_voltage(opp);
> >  
> > -	dmcfreq->rate = dev_pm_opp_get_freq(dmcfreq->curr_opp);
> > -	dmcfreq->volt = dev_pm_opp_get_voltage(dmcfreq->curr_opp);
> > -
> >  	rcu_read_unlock();
> >  
> >  	if (dmcfreq->rate == target_rate)
> 
> dmcfreq->rate is used on here.

Are you trying to say that dmcfreq->rate is required to have the right value as
we will be using it here for comparison? If yes, then ...

> Maybe struct rk3399_dmcfreq need to add the new 'curr_freq' field.
> 
> 
> > @@ -165,7 +161,9 @@ static int rk3399_dmcfreq_target(struct device *dev, unsigned long *freq,
> >  	if (err)
> >  		dev_err(dev, "Cannot to set vol %lu uV\n", target_volt);
> >  
> > -	dmcfreq->curr_opp = opp;
> > +	dmcfreq->rate = target_rate;
> > +	dmcfreq->volt = target_volt;

This takes care of it for all cases except the first call to target()...

> > +
> >  out:
> >  	mutex_unlock(&dmcfreq->lock);
> >  	return err;
> > @@ -431,8 +429,9 @@ static int rk3399_dmcfreq_probe(struct platform_device *pdev)
> >  		rcu_read_unlock();
> >  		return PTR_ERR(opp);
> >  	}
> > +	dmcfreq->rate = dev_pm_opp_get_freq(opp);
> > +	dmcfreq->volt = dev_pm_opp_get_voltage(opp);

And this takes care of the first call to target().

Am I still missing something ?

> >  	rcu_read_unlock();
> > -	data->curr_opp = opp;
> >  
> >  	rk3399_devfreq_dmc_profile.initial_freq = data->rate;
> >  
> > 
> 
> -- 
> Best Regards,
> Chanwoo Choi

-- 
viresh

